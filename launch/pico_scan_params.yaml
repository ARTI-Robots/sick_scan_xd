sick_picoscan_node:
  ros__parameters:
    # Based on the sick's default setup: https://github.com/SICKAG/sick_scan_xd/blob/master/launch/sick_picoscan.launch
    # Current v3.1

    #         network settings:
    hostname: "192.168.0.1"
    port: "2115"
    udp_port: 2115

    udp_receiver_ip: ""
    udp_sender: ""
    imu_enable: True
    imu_udp_port: 7503
    imu_latency_microsec: 0
    # sick_scansegment_xd basic settings:
    publish_frame_id: "laser_frame"


    all_segments_min_deg: -138.0
    all_segments_max_deg: +138.0
    publish_laserscan_segment_topic: "scan_segment"
    publish_laserscan_fullframe_topic: "scan_fullframe"
    udp_input_fifolength: 20                  #         max. udp input fifo length(-1: unlimited, default: 20 for buffering 1 second at 20 Hz), elements will be removed from front if number of elements exceeds the fifo_length
    msgpack_output_fifolength: 20             #         max. msgpack output fifo length(-1: unlimited, default: 20 for buffering 1 second at 20 Hz), elements will be removed from front if number of elements exceeds the fifo_length
    verbose_level: 0                          #         verbose_level <= 0: quiet mode, verbose_level == 1: print statistics, verbose_level == 2: print details incl. msgpack data, default: 1
    measure_timing: True                      #        measure_timing == true: duration and latency of msgpack conversion and export is measured, default: true
    export_csv: False                         #        export msgpack data to csv file, default: false
    export_udp_msg: False                     #        true : export binary udpand msgpack data to file(*.udp and* .msg), default: false
    logfolder: ""                             #      output folder for logfiles, default: "" (no logging)
    send_udp_start: False                     #        Send udp start string to picoScan150
    send_udp_start_string: "magicalActivate"  #      udp string to start picoScan150
    udp_timeout_ms: 60000                  #         Timeout for udp messages in milliseconds, default: 60*1000
    scandataformat: 2   #         ScanDataFormat: 1 for msgpack or 2 for compact scandata, default: 1
    performanceprofilenumber: 10 #        Set performance profile by "sWN PerformanceProfileNumber" if performanceprofilenumber >= 0 (for picoScan: 1-10), default: -1

    #         Apply an additional transform to the cartesian pointcloud, default: "0,0,0,0,0,0" (i.e. no transform)
    #         Note: add_transform_xyz_rpy is specified by 6D pose x, y, z, roll, pitch, yaw in [m] resp. [rad]
    #         It transforms a 3D point in cloud coordinates to 3D point in user defined world coordinates:
    #         add_transform_xyz_rpy := T[world,cloud] with parent "world" and child "cloud", i.e. P_world = T[world,cloud] * P_cloud
    #         The additional transform applies to cartesian lidar pointclouds and visualization marker (fields)
    #         It is NOT applied to polar pointclouds, radarscans, ldmrs objects or other messages
    add_transform_xyz_rpy: "0,0,0,0,0,0"

    #   SOPAS settings:
    sopas_tcp_port: "2111"                          # TCP port for SOPAS commands, default port: 2111
    start_sopas_service: True                       # True: sopas services for CoLa-commands are started (ROS only), default: true
    send_sopas_start_stop_cmd: True                 # True: picoScan150 start and stop command sequence ("sWN ScanDataEnable 0/1" etc.) are sent after driver start and stop, default: true
    sopas_cola_binary: False                        # False: SOPAS uses CoLa-A (ascii, default, recommended), CoLa-B (true, binary) currently experimental
    sopas_timeout_ms: 5000                          # Timeout for SOPAS response in milliseconds, default: 5000
    client_authorization_pw: "F4724744"             # Default password for client authorization

    #   picoScan150 filter settings
    host_read_filtersettings: True                  # Read picoScan150 settings for FREchoFilter, LFPangleRangeFilter and LFPlayerFilter at startup, default: true
    host_FREchoFilter: 2                            # Optionally set FREchoFilter with 0 for FIRST_ECHO (default, EchoCount=1), 1 for ALL_ECHOS (EchoCount=3), or 2 for LAST_ECHO (EchoCount=1)
    host_set_FREchoFilter: True                     # If true, FREchoFilter is set at startup

    #   Msgpack validation
    msgpack_validator_enabled: False                                   # true: check msgpack data for out of bounds and missing scan data, false: no msgpack validation (default)
    msgpack_validator_verbose: 1                                       # 0: print error messages, 1: print error and informational messages, 2: print error and all messages
    msgpack_validator_discard_msgpacks_out_of_bounds: True             # true: msgpacks are discarded if scan data out of bounds detected, false: error message if a msgpack is not validated
    msgpack_validator_check_missing_scandata_interval: 9               # check msgpack for missing scandata after collecting N msgpacks, default: N = 9 segments. Increase this value to tolerate udp packet drops. Use 9 to check each full scan.
    msgpack_validator_required_echos: "0 1 2"                          # default: "0 1 2" for all echos (FREchoFilter=1) or "0" for one echo (FREchoFilter=0)
    msgpack_validator_azimuth_start: -138.0                            # picoScan150: fullscan, -138 to +138 deg
    msgpack_validator_azimuth_end: +138.0                              # picoScan150: fullscan, -138 to +138 deg
    msgpack_validator_elevation_start: 0.0                             # picoScan150: 1 layer
    msgpack_validator_elevation_end: 0.0                               # picoScan150: 1 layer
    msgpack_validator_valid_segments: "0 1 2 3 4 5 6 7 8"              # indices of valid segmentes, default for full scan: 9 segments
    msgpack_validator_layer_filter: "1"                                # picoScan150: 1 layer

    #  Configuration of laserscan messages (ROS only):
    #  Parameter "laserscan_layer_filter" sets a mask to create laserscan messages for configured layer (0: no laserscan message, 1: create laserscan messages for this layer)
    #    Use "1" to activate resp. "0" to deactivate laserscan messages (picoScan has just 1 layer)
    laserscan_layer_filter: "1"


    custom_pointclouds: "cloud_unstructured_segments cloud_unstructured_fullframe cloud_polar_unstructured_segments cloud_polar_unstructured_fullframe cloud_all_fields_fullframe"
    #  Default pointclouds: segmented pointcloud and fullframe pointcloud with all layers and echos in cartesian coordinates"


    #  cloud_unstructured_segments: cartesian coordinates, segmented, all echos, all layers, range filter on, max. 2700 points, mean ca. 1000 points per cloud
    cloud_unstructured_segments: "coordinateNotation=0 updateMethod=1 echos=0,1,2 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_unstructured_segments frameid=world publish=1"

    #  cloud_unstructured_fullframe: cartesian coordinates, fullframe, all echos, all layers, range filter on, max. 32400 points, mean ca. 10000 points per cloud
    cloud_unstructured_fullframe: "coordinateNotation=0 updateMethod=0 echos=0,1,2 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_unstructured_fullframe frameid=world publish=1"

    #  cloud_polar_unstructured_segments: polar coordinates, segmented, all echos, all layers, range filter on, max. 2700 points, mean ca. 1000 points per cloud
    cloud_polar_unstructured_segments: "coordinateNotation=1 updateMethod=1 echos=0,1,2 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_polar_unstructured_segments frameid=world publish=1"

    #  cloud_polar_unstructured_fullframe: polar coordinates, fullframe, all echos, all layers, range filter on
    cloud_polar_unstructured_fullframe: "coordinateNotation=1 updateMethod=0 echos=0,1,2 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_polar_unstructured_fullframe frameid=world publish=1"

    #  cloud_unstructured_echo1: cartesian coordinates, fullframe, first echo, all layers, range filter on
    cloud_unstructured_echo1: "coordinateNotation=0 updateMethod=0 echos=0 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_unstructured_echo1 frameid=world publish=1"

    #  cloud_unstructured_echo1_segments: cartesian coordinates, segmented, first echo, all layers, range filter on
    cloud_unstructured_echo1_segments: "coordinateNotation=0 updateMethod=1 echos=0 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_unstructured_echo1_segments frameid=world publish=1"

    #  cloud_unstructured_echo2: cartesian coordinates, fullframe, first echo, all layers, range filter on
    cloud_unstructured_echo2: "coordinateNotation=0 updateMethod=0 echos=1 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_unstructured_echo2 frameid=world publish=1"

    #  cloud_unstructured_echo2_segments: cartesian coordinates, segmented, first echo, all layers, range filter on
    cloud_unstructured_echo2_segments: "coordinateNotation=0 updateMethod=1 echos=1 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_unstructured_echo2_segments frameid=world publish=1"

    #  cloud_unstructured_echo3: cartesian coordinates, fullframe, first echo, all layers, range filter on
    cloud_unstructured_echo3: "coordinateNotation=0 updateMethod=0 echos=2 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_unstructured_echo3 frameid=world publish=1"

    #  cloud_unstructured_echo3_segments: cartesian coordinates, segmented, first echo, all layers, range filter on
    cloud_unstructured_echo3_segments: "coordinateNotation=0 updateMethod=1 echos=2 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_unstructured_echo3_segments frameid=world publish=1"

    #  cloud_unstructured_reflector: cartesian coordinates, fullframe, first echo, all layers, range filter on
    cloud_unstructured_reflector: "coordinateNotation=0 updateMethod=0 echos=0,1,2 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_unstructured_reflector frameid=world publish=1"

    #  cloud_unstructured_reflector_segments: cartesian coordinates, segmented, first echo, all layers, range filter on
    cloud_unstructured_reflector_segments: "coordinateNotation=0 updateMethod=1 echos=0,1,2 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=1 infringed=0,1 rangeFilter=0.05,999,1 topic=/cloud_unstructured_reflector_segments frameid=world publish=1"

    #  cloud_structured_hires0: cartesian and polar coordinates, fullframe, all echos, range filter off, high resolution layer 6, fields=x,y,z,i,range,azimuth,elevation, number of points: 2880 x NumEchos x NumSegments
    cloud_structured_hires0: "coordinateNotation=3 updateMethod=0 fields=x,y,z,i,range,azimuth,elevation echos=0,1,2 layers=6 reflectors=0,1 infringed=0,1 rangeFilter=0,999,0 topic=/cloud_structured_hires0 frameid=world publish=1"

    #  cloud_structured_hires0_segments: cartesian and polar coordinates, segments, all echos, range filter off, high resolution layer 6, fields=x,y,z,i,range,azimuth,elevation
    cloud_structured_hires0_segments: "coordinateNotation=3 updateMethod=1 fields=x,y,z,i,range,azimuth,elevation echos=0,1,2 layers=6 reflectors=0,1 infringed=0,1 rangeFilter=0,999,0 topic=/cloud_structured_hires0_segments frameid=world publish=1"

    #  cloud_structured_hires1: cartesian and polar coordinates, fullframe, all echos, range filter off, high resolution layer 14, fields=x,y,z,i,range,azimuth,elevation, number of points: 2880 x NumEchos x NumSegments
    cloud_structured_hires1: "coordinateNotation=3 updateMethod=0 fields=x,y,z,i,range,azimuth,elevation echos=0,1,2 layers=14 reflectors=0,1 infringed=0,1 rangeFilter=0,999,0 topic=/cloud_structured_hires1 frameid=world publish=1"

    #  cloud_structured_hires1_segments: cartesian and polar coordinates, segments, all echos, range filter off, high resolution layer 14, fields=x,y,z,i,range,azimuth,elevation
    cloud_structured_hires1_segments: "coordinateNotation=3 updateMethod=1 fields=x,y,z,i,range,azimuth,elevation echos=0,1,2 layers=14 reflectors=0,1 infringed=0,1 rangeFilter=0,999,0 topic=/cloud_structured_hires1_segments frameid=world publish=1"

    #  cloud_structured: cartesian and polar coordinates, fullframe, all echos, range filter off, low resolution layers 1,2,3,4,5,7,8,9,10,11,12,13,15,16, fields=x,y,z,i,range,azimuth,elevation, 12*360*14*3=181440 points per cloud
    cloud_structured: "coordinateNotation=3 updateMethod=0 fields=x,y,z,i,range,azimuth,elevation echos=0,1,2 layers=1,2,3,4,5,7,8,9,10,11,12,13,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0,999,0 topic=/cloud_structured frameid=world publish=1"

    #  cloud_structured_segments: cartesian and polar coordinates, segments, all echos, range filter off, low resolution layers 1,2,3,4,5,7,8,9,10,11,12,13,15,16, fields=x,y,z,i,range,azimuth,elevation, 360*14*3=15120 points per cloud
    cloud_structured_segments: "coordinateNotation=3 updateMethod=1 fields=x,y,z,i,range,azimuth,elevation echos=0,1,2 layers=1,2,3,4,5,7,8,9,10,11,12,13,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0,999,0 topic=/cloud_structured_segments frameid=world publish=1"

    #  cloud_all_fields_segments: all fields (x,y,z,i,range,azimuth,elevation,layer,echo,reflector), segments, all echos, all layers, range filter off
    cloud_all_fields_segments: "coordinateNotation=3 updateMethod=1 fields=x,y,z,i,range,azimuth,elevation,layer,echo,reflector echos=0,1,2 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0,999,0 topic=/cloud_all_fields_segments frameid=world publish=1"

    #  cloud_all_fields_fullframe: all fields (x,y,z,i,range,azimuth,elevation,layer,echo,reflector), fullframe, all echos, all layers, range filter off
    cloud_all_fields_fullframe: "coordinateNotation=3 updateMethod=0 fields=x,y,z,i,range,azimuth,elevation,layer,echo,reflector echos=0,1,2 layers=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 reflectors=0,1 infringed=0,1 rangeFilter=0,999,0 topic=/cloud_all_fields_fullframe frameid=world publish=1"

