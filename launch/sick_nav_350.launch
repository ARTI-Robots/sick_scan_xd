<?xml version="1.0"?>
<!-- LAUNCH FILE FOR NAV350 -->
<!-- NAV350 support is currently experimental and under development. -->
<!-- Using node option required="true" will close roslaunch after node exits -->

<launch>
    <arg name="hostname" default="192.168.0.1"/>
    <arg name="cloud_topic" default="cloud"/>
    <arg name="frame_id" default="cloud"/>
    <node name="sick_nav_350" pkg="sick_scan" type="sick_generic_caller" respawn="false" output="screen" required="true">
        <param name="scanner_type" type="string" value="sick_nav_350"/>

        <param name="use_binary_protocol" type="bool" value="true"/>
        <param name="hostname" type="string" value="$(arg hostname)"/>
        <param name="cloud_topic" type="string" value="$(arg cloud_topic)"/>
        <param name="frame_id" type="str" value="$(arg frame_id)"/>
        <param name="port" type="string" value="2112"/>
        <param name="timelimit" type="int" value="5"/>
        <param name="min_ang" type="double" value="-3.14159265359"/> <!-- default start angle for NAV-3xx: -180 deg in ros coordinates (resp. 0 deg in nav coordinates) -->
        <param name="max_ang" type="double" value="3.14159265359"/>  <!-- default stop angle for  NAV-3xx: +180 deg in ros coordinates (resp. 360 deg in nav coordinates)  -->
        <param name="nav_operation_mode" type="int" value="4" />                  <!-- Set operational mode after startup: 0 = power down, 1 = standby, 2 = mapping, 3 = landmark detection, 4 = navigation -->

        <param name="start_services" type="bool" value="True" />                  <!-- Start ros service for cola commands, default: true -->
        <param name="message_monitoring_enabled" type="bool" value="True" />      <!-- Enable message monitoring with reconnect+reinit in case of timeouts, default: true -->
        <param name="read_timeout_millisec_default" type="int" value="5000"/>     <!-- 5 sec read timeout in operational mode (measurement mode), default: 5000 milliseconds -->
        <param name="read_timeout_millisec_startup" type="int" value="120000"/>   <!-- 120 sec read timeout during startup (sensor may be starting up, which can take up to 120 sec.), default: 120000 milliseconds -->
        <param name="read_timeout_millisec_kill_node" type="int" value="150000"/> <!-- 150 sec pointcloud timeout, ros node will be killed if no point cloud published within the last 150 sec., default: 150000 milliseconds -->
        <param name="client_authorization_pw" type="string" value="F4724744"/>    <!-- Default password for client authorization -->

    </node>

</launch>
