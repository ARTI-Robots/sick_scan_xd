/*
 * @brief sick_scan2 test_server_thread implements a simple tcp server thread,
 * simulating a lidar device for unittests. It runs a thread to listen
 * and accept tcp connections from clients and generates telegrams to test
 * the sick_scan2 ros driver.
 *
 * Note: sick_scan2 test_server does not implement the functions of lidar sensor,
 * it just implements a simple tcp server, accepting tcp connections from clients
 * and generating telegrams to test the sick_scan2 ros drivers.
 *
 * Copyright (C) 2020 Ing.-Buero Dr. Michael Lehning, Hildesheim
 * Copyright (C) 2020 SICK AG, Waldkirch
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of SICK AG nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission
 *     * Neither the name of Ing.-Buero Dr. Michael Lehning nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 *      Authors:
 *         Michael Lehning <michael.lehning@lehning.de>
 *
 *  Copyright 2020 SICK AG
 *  Copyright 2020 Ing.-Buero Dr. Michael Lehning
 *
 */
#include <chrono>
#include <thread>

#include <boost/asio/buffer.hpp>
#include <boost/asio/io_service.hpp>
#include <boost/asio/ip/tcp.hpp>
#include <boost/asio/read.hpp>
#include <boost/asio/write.hpp>

#include "sick_scan/binPrintf.hpp"
#include "sick_scan/test_server/test_server_thread.h"
#include "sick_scan/test_server/test_server_cola_msg.h"
#include "sick_scan/test_server/test_server_ldmrs_msg.h"

/*!
 * Constructor. The server thread does not start automatically, call start() and stop() to start and stop the server.
 * @param[in] nh ros node handle
 * @param[in] scanner_name scanner type, f.e. "sick_ldmrs"
 * @param[in] ip_port ip port for tcp connections, default: 2112
 */
sick_scan::test::TestServerThread::TestServerThread(rclcpp::Node::SharedPtr nh, const std::string & scanner_name, int ip_port)
: m_nh(nh), m_scanner_name(scanner_name), m_ip_port(ip_port), m_server_thread(0), m_run_server_thread(false)
{
}

/*!
 * Destructor. Stops the server thread and closes all tcp connections.
 */
sick_scan::test::TestServerThread::~TestServerThread()
{
}

/*!
 * Starts the server thread, starts to listen and accept tcp connections from clients.
 * @return true on success, false on failure.
 */
bool sick_scan::test::TestServerThread::start(void)
{
  m_run_server_thread = true;
  m_server_thread = new std::thread(&sick_scan::test::TestServerThread::run, this);
  return true;
}

/*!
 * Stops the server thread and closes all tcp connections.
 * @return true on success, false on failure.
 */
bool sick_scan::test::TestServerThread::stop(void)
{
  m_run_server_thread = false;
  if(m_server_thread != 0)
  {
    m_server_thread->join();
    delete m_server_thread;
    m_server_thread = 0;
  }
  return true;
}

/*
 * @brief Thread callback, runs the tcp communication with clients
 */
bool sick_scan::test::TestServerThread::run(void)
{
  assert(m_nh != 0);
  RCLCPP_INFO_STREAM(m_nh->get_logger(), "sick_scan::test::TestServerThread::run(): starting tcp communication thread, simulating scanner type \"" << m_scanner_name << "\"");
  double send_scan_data_rate = 1/20.0; // frequency to generate and send scan data (default: 20 Hz)
  m_nh->get_parameter("send_scan_data_rate", send_scan_data_rate);
#ifdef WIN32 // some hardcoded scan_data for tests only (get_parameter has issues with large data files on Windows)
  std::vector<uint8_t> scan_data_payload = { 0x00, 0x01, 0x00, 0x01, 0x01, 0x18, 0x9f, 0x5c,
      0x00, 0x00, 0x05, 0xf6, 0x05, 0xfa, 0x06, 0xf5, 0x3d, 0x52, 0x06, 0xf5, 0x51, 0x6d, 0x00, 0x00,      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xdc, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x02,
      0x44, 0x49, 0x53, 0x54, 0x31, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf9, 0x22,      0x30, 0x0d, 0x05, 0x03, 0x2b, 0x01, 0xaa, 0x01, 0xa8, 0x01, 0xa4, 0x01, 0xa3, 0x01, 0xa5, 0x01,
      0xab, 0x01, 0xa5, 0x01, 0xa7, 0x01, 0xa5, 0x01, 0x9e, 0x01, 0x9f, 0x01, 0xa5, 0x01, 0xa0, 0x01,      0x9c, 0x01, 0x99, 0x01, 0xa6, 0x01, 0xa5, 0x01, 0xa9, 0x01, 0xae, 0x01, 0xab, 0x01, 0xac, 0x01,
      0xaa, 0x01, 0xb1, 0x01, 0xa8, 0x01, 0xaf, 0x01, 0xb0, 0x01, 0xae, 0x01, 0xab, 0x01, 0xb4, 0x01,      0xb5, 0x01, 0xa7, 0x01, 0xad, 0x01, 0xb2, 0x01, 0xb2, 0x01, 0xb7, 0x01, 0xb5, 0x01, 0xb4, 0x01,
      0xb9, 0x01, 0xb8, 0x01, 0xb5, 0x01, 0xba, 0x01, 0xbc, 0x01, 0xb5, 0x01, 0xb6, 0x01, 0xb3, 0x01,      0xb4, 0x01, 0xad, 0x01, 0xbc, 0x01, 0xb8, 0x01, 0xb5, 0x01, 0xb7, 0x01, 0xb7, 0x01, 0xb7, 0x01,
      0xba, 0x01, 0xb2, 0x01, 0xc4, 0x01, 0xb6, 0x01, 0xc0, 0x01, 0xb5, 0x01, 0xbe, 0x01, 0xbe, 0x01,      0xba, 0x01, 0xc1, 0x01, 0xc1, 0x01, 0xb8, 0x01, 0xc6, 0x01, 0xc2, 0x01, 0xc1, 0x01, 0xc9, 0x01,
      0xd2, 0x01, 0xdd, 0x01, 0xdb, 0x01, 0xd5, 0x01, 0xc2, 0x01, 0xca, 0x01, 0xc5, 0x01, 0xc9, 0x01,      0xc8, 0x01, 0xd4, 0x01, 0xcf, 0x01, 0xe0, 0x01, 0xfb, 0x01, 0xe8, 0x02, 0x06, 0x02, 0x16, 0x02,
      0x11, 0x02, 0x01, 0x01, 0xf8, 0x01, 0xf1, 0x01, 0xf2, 0x01, 0xf3, 0x01, 0xeb, 0x01, 0xed, 0x01,      0xe6, 0x01, 0xe2, 0x01, 0xe1, 0x01, 0xde, 0x01, 0xd2, 0x01, 0xdd, 0x01, 0xd4, 0x01, 0xd3, 0x01,
      0xca, 0x01, 0xc2, 0x01, 0xbd, 0x01, 0xc3, 0x01, 0xbd, 0x01, 0xbb, 0x01, 0xbc, 0x01, 0xbb, 0x01,      0xbb, 0x01, 0xbf, 0x01, 0xbf, 0x01, 0xbe, 0x01, 0xbe, 0x01, 0xbc, 0x01, 0xb9, 0x01, 0xc0, 0x01,
      0xc0, 0x01, 0xc3, 0x01, 0xc4, 0x01, 0xca, 0x01, 0xd4, 0x01, 0xdf, 0x01, 0xd6, 0x01, 0xcd, 0x01,      0xc2, 0x01, 0xc8, 0x01, 0xcd, 0x01, 0xff, 0x00, 0x02, 0x00, 0x02, 0x03, 0x01, 0x02, 0xf1, 0x02,
      0xeb, 0x02, 0xe8, 0x02, 0xe1, 0x02, 0xd8, 0x02, 0xd3, 0x02, 0xc6, 0x02, 0xc0, 0x02, 0xba, 0x02,      0xaf, 0x02, 0xaa, 0x02, 0xa6, 0x02, 0xa3, 0x02, 0x99, 0x02, 0x90, 0x02, 0x87, 0x02, 0x8b, 0x02,
      0x8a, 0x02, 0x8f, 0x02, 0x92, 0x02, 0x93, 0x02, 0x96, 0x02, 0x99, 0x02, 0x9e, 0x02, 0x9c, 0x02,      0x9d, 0x02, 0xa1, 0x02, 0xa3, 0x02, 0xa5, 0x02, 0xa5, 0x02, 0xac, 0x02, 0xac, 0x02, 0xb2, 0x02,
      0xb5, 0x02, 0xb5, 0x02, 0xb9, 0x02, 0xbe, 0x02, 0xc2, 0x02, 0xc3, 0x02, 0xc7, 0x02, 0xc8, 0x02,      0xb2, 0x02, 0xb0, 0x02, 0xc6, 0x02, 0xd9, 0x02, 0xdb, 0x02, 0xdf, 0x02, 0xe5, 0x03, 0x38, 0x04,
      0x38, 0x04, 0x5c, 0x04, 0x53, 0x04, 0x4e, 0x04, 0x48, 0x04, 0x3b, 0x04, 0x3d, 0x04, 0x30, 0x04,      0x24, 0x04, 0x23, 0x04, 0x1b, 0x04, 0x0f, 0x04, 0x11, 0x04, 0x07, 0x03, 0xfb, 0x03, 0xf7, 0x03,
      0xf7, 0x03, 0xec, 0x03, 0xea, 0x03, 0xe1, 0x03, 0xe1, 0x03, 0xda, 0x03, 0xd0, 0x03, 0xcd, 0x03,      0xcb, 0x03, 0xc1, 0x03, 0xbf, 0x03, 0xb4, 0x03, 0xb3, 0x03, 0xb0, 0x03, 0xa5, 0x03, 0xa4, 0x03,
      0xa1, 0x03, 0x9f, 0x03, 0x96, 0x03, 0x92, 0x03, 0x92, 0x03, 0x8b, 0x03, 0x8a, 0x03, 0x85, 0x03,      0x83, 0x03, 0x7c, 0x03, 0x7c, 0x03, 0x74, 0x03, 0x6f, 0x03, 0x6e, 0x03, 0x69, 0x03, 0x68, 0x03,
      0x66, 0x03, 0x5f, 0x03, 0x5d, 0x03, 0x5e, 0x03, 0x56, 0x03, 0x4f, 0x03, 0x4d, 0x03, 0x4d, 0x03,      0x4b, 0x03, 0x45, 0x03, 0x41, 0x03, 0x3f, 0x03, 0x38, 0x03, 0x38, 0x03, 0x37, 0x03, 0x35, 0x03,
      0x34, 0x03, 0x32, 0x03, 0x2d, 0x03, 0x2b, 0x03, 0x25, 0x03, 0x25, 0x03, 0x22, 0x03, 0x20, 0x03,      0x1b, 0x03, 0x1a, 0x03, 0x0c, 0x02, 0xbb, 0x01, 0xf2, 0x01, 0xe7, 0x01, 0xe7, 0x01, 0xe2, 0x01,
      0xe5, 0x01, 0xe0, 0x01, 0xe4, 0x01, 0xe2, 0x01, 0xde, 0x01, 0xde, 0x01, 0xe1, 0x01, 0xde, 0x01,      0xe4, 0x02, 0x45, 0x02, 0xe5, 0x02, 0xf3, 0x02, 0xf6, 0x02, 0xf3, 0x02, 0xef, 0x02, 0xf6, 0x02,
      0xf2, 0x02, 0xec, 0x02, 0xed, 0x02, 0xeb, 0x02, 0xe7, 0x02, 0xe8, 0x02, 0xec, 0x02, 0xe5, 0x02,      0xe5, 0x02, 0xe2, 0x02, 0xe4, 0x02, 0xdb, 0x02, 0xdc, 0x02, 0xdd, 0x02, 0xe1, 0x02, 0xdd, 0x02,
      0xda, 0x02, 0xdb, 0x02, 0xdc, 0x02, 0xd7, 0x02, 0xde, 0x02, 0xdc, 0x02, 0xe1, 0x02, 0xd3, 0x02,      0xa2, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00,      0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00,
      0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00,      0x02, 0x00, 0x02, 0x01, 0x57, 0x01, 0x5c, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00,
      0x02, 0x02, 0x9f, 0x02, 0xc4, 0x02, 0xc1, 0x02, 0xc4, 0x02, 0xc0, 0x02, 0xba, 0x02, 0xb9, 0x02,      0xb9, 0x02, 0xba, 0x02, 0xb2, 0x02, 0xaf, 0x02, 0xac, 0x02, 0xaf, 0x02, 0xab, 0x02, 0xab, 0x02,
      0xaf, 0x02, 0xab, 0x02, 0xab, 0x02, 0xaa, 0x02, 0xad, 0x02, 0xad, 0x02, 0xaf, 0x02, 0xae, 0x02,      0xaa, 0x02, 0xac, 0x02, 0xb0, 0x02, 0xac, 0x02, 0xb6, 0x02, 0xb0, 0x02, 0xb5, 0x02, 0xb6, 0x02,
      0xae, 0x02, 0xb8, 0x02, 0xb4, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xbc, 0x02, 0xbe, 0x02, 0xbf, 0x02,      0xbf, 0x02, 0xc1, 0x02, 0xbf, 0x02, 0xc2, 0x02, 0xc6, 0x02, 0xc5, 0x02, 0xc5, 0x02, 0xcf, 0x02,
      0xcc, 0x02, 0xc8, 0x02, 0xc2, 0x02, 0x7c, 0x02, 0x0b, 0x01, 0xe6, 0x01, 0xe4, 0x01, 0xe1, 0x01,      0xdc, 0x01, 0xde, 0x01, 0xde, 0x01, 0xe7, 0x01, 0xe2, 0x01, 0xf3, 0x01, 0xf6, 0x01, 0xf2, 0x01,
      0xed, 0x01, 0xed, 0x01, 0xe9, 0x01, 0xeb, 0x01, 0xea, 0x01, 0xe8, 0x01, 0xe8, 0x01, 0xe3, 0x01,      0xe3, 0x01, 0xe6, 0x01, 0xea, 0x01, 0xde, 0x01, 0xda, 0x01, 0xd3, 0x01, 0xd5, 0x01, 0xda, 0x01,
      0xd8, 0x01, 0xe0, 0x01, 0xd9, 0x01, 0xde, 0x01, 0xe3, 0x01, 0xe3, 0x01, 0xe0, 0x01, 0xe6, 0x01,      0xe6, 0x01, 0xea, 0x01, 0xe7, 0x01, 0xea, 0x01, 0xed, 0x01, 0xee, 0x01, 0xf3, 0x01, 0xf8, 0x01,
      0xf7, 0x01, 0xfc, 0x02, 0x00, 0x02, 0x06, 0x02, 0x0c, 0x02, 0x0d, 0x02, 0x0c, 0x02, 0x17, 0x02,      0x28, 0x02, 0xbe, 0x03, 0x75, 0x03, 0x90, 0x03, 0x91, 0x03, 0x97, 0x03, 0x9a, 0x03, 0x9f, 0x03,
      0xa5, 0x03, 0xab, 0x03, 0xae, 0x03, 0xb3, 0x03, 0xb7, 0x03, 0xbb, 0x03, 0xc2, 0x03, 0xc7, 0x03,      0xca, 0x03, 0xd1, 0x03, 0xd8, 0x03, 0xdd, 0x03, 0xe4, 0x03, 0xe6, 0x03, 0xee, 0x03, 0xf7, 0x03,
      0xfb, 0x04, 0x04, 0x04, 0x08, 0x04, 0x11, 0x04, 0x15, 0x04, 0x18, 0x04, 0x23, 0x04, 0x2a, 0x04,      0x29, 0x04, 0x34, 0x04, 0x3b, 0x04, 0x41, 0x04, 0x4a, 0x04, 0x4f, 0x04, 0x5e, 0x04, 0x68, 0x04,
      0x65, 0x04, 0x6a, 0x04, 0x7b, 0x04, 0x86, 0x04, 0x92, 0x04, 0x95, 0x04, 0x97, 0x04, 0xa0, 0x04,      0xb0, 0x04, 0xba, 0x04, 0xc0, 0x04, 0xc6, 0x04, 0xd7, 0x04, 0xde, 0x04, 0xea, 0x04, 0xe7, 0x05,
      0x0b, 0x05, 0x08, 0x05, 0x18, 0x05, 0x1d, 0x05, 0x2d, 0x05, 0x31, 0x05, 0x49, 0x05, 0x45, 0x05,      0x62, 0x05, 0x6b, 0x05, 0x75, 0x05, 0x82, 0x05, 0x93, 0x05, 0xa8, 0x05, 0xaa, 0x05, 0xbe, 0x05,
      0xc3, 0x05, 0xdb, 0x05, 0xf3, 0x05, 0xfd, 0x06, 0x0b, 0x06, 0x1a, 0x06, 0x33, 0x06, 0x40, 0x06,      0x53, 0x06, 0x68, 0x06, 0x7c, 0x06, 0x90, 0x06, 0xa7, 0x06, 0xb9, 0x06, 0xcf, 0x06, 0xe9, 0x06,
      0xf9, 0x06, 0xf8, 0x06, 0xfe, 0x06, 0xec, 0x06, 0xe8, 0x06, 0xed, 0x06, 0xeb, 0x06, 0xe2, 0x06,      0xdb, 0x06, 0xd3, 0x06, 0xb4, 0x06, 0x98, 0x06, 0x93, 0x06, 0x92, 0x06, 0x9a, 0x06, 0x91, 0x06,
      0x86, 0x06, 0x96, 0x06, 0xb4, 0x06, 0xb8, 0x06, 0xb7, 0x06, 0xb7, 0x06, 0xb5, 0x06, 0xa6, 0x06,      0xb2, 0x06, 0xa1, 0x06, 0xa8, 0x06, 0xac, 0x06, 0x98, 0x06, 0x9d, 0x06, 0xa3, 0x00, 0x02, 0x00,
      0x02, 0x00, 0x02, 0x01, 0x45, 0x01, 0x42, 0x01, 0x47, 0x01, 0x45, 0x00, 0x02, 0x00, 0x02, 0x01,      0x39, 0x00, 0x00, 0x00, 0x02, 0x01, 0x4b, 0x01, 0x42, 0x01, 0x4d, 0x01, 0x4c, 0x01, 0x43, 0x01,
      0x47, 0x01, 0x3e, 0x01, 0x3c, 0x01, 0x36, 0x01, 0x31, 0x01, 0x31, 0x01, 0x2c, 0x01, 0x2a, 0x01,      0x21, 0x01, 0x22, 0x01, 0x1c, 0x01, 0x0f, 0x01, 0x0d, 0x01, 0x06, 0x01, 0x02, 0x01, 0x05, 0x01,
      0x00, 0x00, 0xf7, 0x00, 0xf0, 0x00, 0xe2, 0x00, 0xdc, 0x00, 0xce, 0x00, 0xcd, 0x00, 0xbf, 0x00,      0xb8, 0x00, 0xab, 0x06, 0xfd, 0x00, 0x99, 0x00, 0x8f, 0x06, 0xe9, 0x06, 0xde, 0x06, 0xd8, 0x06,
      0xd0, 0x06, 0xce, 0x06, 0xc8, 0x06, 0xc1, 0x06, 0xbb, 0x06, 0xb5, 0x06, 0xb0, 0x06, 0xab, 0x06,      0xa7, 0x06, 0xa3, 0x06, 0xa0, 0x06, 0x9d, 0x06, 0x96, 0x06, 0x92, 0x06, 0x8f, 0x06, 0x8e, 0x06,
      0x60, 0x06, 0x03, 0x06, 0x43, 0x06, 0x40, 0x06, 0x54, 0x06, 0x77, 0x06, 0x7e, 0x06, 0x7d, 0x06,      0x87, 0x06, 0x7e, 0x06, 0x85, 0x06, 0x85, 0x06, 0x84, 0x06, 0x8e, 0x06, 0x8e, 0x06, 0x8f, 0x06,
      0x94, 0x06, 0x98, 0x06, 0x96, 0x06, 0x93, 0x06, 0x97, 0x06, 0x9f, 0x06, 0x9e, 0x06, 0x9e, 0x06,      0xa7, 0x06, 0xa1, 0x06, 0xa5, 0x06, 0xae, 0x06, 0xaf, 0x06, 0xb4, 0x06, 0xb4, 0x06, 0xbb, 0x06,
      0xbc, 0x06, 0xbf, 0x06, 0xbf, 0x06, 0xbe, 0x06, 0xd0, 0x06, 0xc8, 0x06, 0xcd, 0x06, 0xd5, 0x06,      0xd0, 0x06, 0xd8, 0x06, 0xe1, 0x06, 0xde, 0x06, 0xde, 0x06, 0xeb, 0x06, 0xe9, 0x06, 0xf3, 0x06,
      0xf8, 0x06, 0xf6, 0x07, 0x01, 0x07, 0x01, 0x07, 0x0e, 0x07, 0x13, 0x07, 0x19, 0x07, 0x23, 0x07,      0x1d, 0x07, 0x26, 0x07, 0x21, 0x07, 0x2f, 0x07, 0x32, 0x07, 0x38, 0x07, 0x42, 0x07, 0x43, 0x07,
      0x49, 0x07, 0x52, 0x07, 0x5a, 0x07, 0x59, 0x07, 0x66, 0x07, 0x67, 0x07, 0x58, 0x07, 0x44, 0x07,      0x3c, 0x07, 0x41, 0x07, 0x4c, 0x07, 0x53, 0x07, 0x5b, 0x07, 0x98, 0x07, 0xa6, 0x07, 0xaf, 0x07,
      0xb7, 0x07, 0xb8, 0x07, 0xc6, 0x07, 0xd2, 0x07, 0xd0, 0x07, 0xd5, 0x07, 0xea, 0x07, 0xf0, 0x07,      0xfd, 0x07, 0xf8, 0x08, 0x04, 0x08, 0x0f, 0x08, 0x19, 0x08, 0x32, 0x08, 0x32, 0x08, 0x32, 0x08,
      0x41, 0x08, 0x4d, 0x08, 0x4b, 0x08, 0x5d, 0x08, 0x69, 0x08, 0x6e, 0x08, 0x76, 0x08, 0x87, 0x08,      0x9a, 0x08, 0x98, 0x08, 0xa7, 0x08, 0xb1, 0x08, 0xbe, 0x08, 0xc5, 0x08, 0xd6, 0x08, 0xe0, 0x08,
      0xe8, 0x09, 0x00, 0x09, 0x05, 0x09, 0x16, 0x09, 0x23, 0x09, 0x32, 0x09, 0x3d, 0x09, 0x3e, 0x09,      0x37, 0x09, 0x32, 0x09, 0x33, 0x09, 0x48, 0x09, 0x78, 0x09, 0xad, 0x09, 0xc2, 0x09, 0xd4, 0x09,
      0xe6, 0x09, 0xf8, 0x0a, 0x0a, 0x0a, 0x1e, 0x0a, 0x31, 0x0a, 0x42, 0x0a, 0x58, 0x0a, 0x68, 0x0a,      0x84, 0x0a, 0x97, 0x0a, 0xae, 0x0a, 0xc5, 0x0a, 0xd9, 0x0a, 0xf2, 0x0b, 0x08, 0x0b, 0x24, 0x0b,
      0x3b, 0x0b, 0x58, 0x0b, 0x70, 0x0b, 0x8b, 0x0b, 0xae, 0x0b, 0xb7, 0x0b, 0xb9, 0x0b, 0xaf, 0x05,      0x45, 0x05, 0x6e, 0x05, 0xc1, 0x05, 0xf4, 0x06, 0x0d, 0x06, 0x30, 0x06, 0x52, 0x06, 0x6f, 0x06,
      0x95, 0x06, 0xb9, 0x0d, 0x55, 0x07, 0x01, 0x07, 0x29, 0x07, 0x52, 0x07, 0x7f, 0x0e, 0x1e, 0x0e,      0x48, 0x0e, 0x5b, 0x0e, 0x53, 0x0e, 0x57, 0x0e, 0x60, 0x0e, 0x57, 0x0e, 0x4b, 0x0e, 0x44, 0x0e,
      0x39, 0x0e, 0x2f, 0x0e, 0x29, 0x0e, 0x1c, 0x0e, 0x13, 0x0e, 0x0e, 0x52, 0x53, 0x53, 0x49, 0x31,      0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf9, 0x22, 0x30, 0x0d, 0x05, 0x03, 0x2b,
      0x40, 0x82, 0x41, 0x0b, 0x3f, 0xe5, 0x3f, 0x7b, 0x40, 0x22, 0x3f, 0xba, 0x3d, 0xb6, 0x3d, 0xc6,      0x3e, 0x39, 0x3d, 0xbb, 0x3d, 0x91, 0x3d, 0xda, 0x3d, 0xce, 0x3c, 0x40, 0x3b, 0x0a, 0x3c, 0x1b,
      0x3b, 0x10, 0x3c, 0x33, 0x3d, 0xfb, 0x3d, 0xd8, 0x3d, 0xfd, 0x3d, 0x6b, 0x3e, 0x95, 0x3d, 0x43,      0x3e, 0x07, 0x3d, 0x8c, 0x3d, 0xac, 0x3c, 0xf5, 0x3d, 0xd4, 0x3e, 0x39, 0x3c, 0x33, 0x3c, 0xa2,
      0x3d, 0x9a, 0x3d, 0x83, 0x3e, 0x44, 0x3d, 0xd7, 0x3d, 0xb9, 0x3e, 0x50, 0x3d, 0x3e, 0x3b, 0xc9,      0x3c, 0x30, 0x3c, 0x31, 0x3b, 0xa0, 0x3b, 0x88, 0x3b, 0x45, 0x3b, 0x46, 0x3a, 0x86, 0x3c, 0xab,
      0x3b, 0xc7, 0x3b, 0xd0, 0x3b, 0xc1, 0x3b, 0xc5, 0x3b, 0xe4, 0x3c, 0x75, 0x3b, 0xa6, 0x3e, 0x1c,      0x3c, 0x37, 0x3d, 0xbc, 0x3b, 0x9a, 0x3c, 0xe2, 0x3c, 0xe6, 0x3b, 0xdf, 0x3c, 0x2e, 0x3b, 0xc4,
      0x39, 0xaf, 0x3b, 0x50, 0x3a, 0x5d, 0x38, 0xc7, 0x38, 0x5f, 0x37, 0xb4, 0x37, 0x9f, 0x37, 0x0c,      0x36, 0x83, 0x34, 0x43, 0x36, 0x37, 0x35, 0xae, 0x36, 0xde, 0x35, 0x05, 0x34, 0x47, 0x2c, 0x3a,
      0x22, 0x63, 0x15, 0x6a, 0x16, 0x68, 0x19, 0xb9, 0x1e, 0xf7, 0x1d, 0xba, 0x1e, 0x31, 0x1b, 0xc7,      0x1a, 0x9e, 0x1b, 0x2e, 0x1b, 0x44, 0x1b, 0x8e, 0x1b, 0x8b, 0x1c, 0xf0, 0x1d, 0x73, 0x1e, 0x84,
      0x1f, 0x3b, 0x1d, 0x57, 0x1c, 0xd0, 0x1c, 0xe7, 0x1d, 0x27, 0x1b, 0x7c, 0x1d, 0x20, 0x1d, 0xd1,      0x22, 0x22, 0x24, 0xe0, 0x27, 0xd5, 0x24, 0x98, 0x1f, 0xff, 0x1e, 0x75, 0x1f, 0x1a, 0x21, 0xc8,
      0x22, 0x00, 0x21, 0xb0, 0x21, 0x8c, 0x21, 0xfe, 0x21, 0xfb, 0x22, 0x44, 0x20, 0x83, 0x1d, 0x87,      0x1e, 0x55, 0x20, 0x04, 0x1f, 0x8c, 0x1b, 0xb6, 0x17, 0x80, 0x1d, 0x4b, 0x22, 0x26, 0x21, 0x27,
      0x16, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x15, 0xd9, 0x17, 0x5d, 0x18, 0x5b, 0x18, 0x1a, 0x18, 0xf5,      0x19, 0xc6, 0x1b, 0x06, 0x1b, 0xd4, 0x1d, 0x80, 0x1d, 0x1e, 0x1d, 0xbd, 0x20, 0xca, 0x27, 0x15,
      0x24, 0xda, 0x26, 0x2c, 0x28, 0xcb, 0x2f, 0x6a, 0x32, 0x88, 0x30, 0xa2, 0x30, 0x05, 0x2f, 0x62,      0x2f, 0x84, 0x2d, 0x6e, 0x2c, 0xee, 0x2c, 0xed, 0x2b, 0x62, 0x26, 0xa4, 0x25, 0x57, 0x26, 0x57,
      0x25, 0x3a, 0x26, 0x87, 0x26, 0xbc, 0x26, 0x71, 0x25, 0x59, 0x26, 0x27, 0x26, 0x84, 0x26, 0x83,      0x26, 0xe2, 0x26, 0xa4, 0x26, 0x75, 0x25, 0x61, 0x24, 0xb2, 0x20, 0x55, 0x21, 0x60, 0x23, 0xa8,
      0x25, 0xf4, 0x26, 0x46, 0x26, 0x09, 0x24, 0xf2, 0x24, 0x35, 0x32, 0x41, 0x3b, 0x6c, 0x3c, 0xb7,      0x3d, 0x73, 0x3d, 0xd7, 0x3c, 0xcc, 0x3e, 0x1e, 0x3d, 0x75, 0x3d, 0x0f, 0x3d, 0xaa, 0x3d, 0x93,
      0x3d, 0x34, 0x3e, 0xd7, 0x3d, 0xd3, 0x3d, 0x19, 0x3e, 0x5a, 0x3f, 0x10, 0x3e, 0x1b, 0x3e, 0x4c,      0x3d, 0xcf, 0x3e, 0x77, 0x3e, 0x8b, 0x3d, 0xd0, 0x3e, 0x77, 0x3e, 0x9f, 0x3e, 0x69, 0x3e, 0xd3,
      0x3e, 0x1e, 0x3e, 0x6f, 0x3f, 0xb3, 0x3e, 0xbb, 0x3e, 0x85, 0x3e, 0xac, 0x3f, 0xa4, 0x3e, 0x78,      0x3e, 0xbc, 0x40, 0x03, 0x3e, 0xfd, 0x3f, 0x98, 0x3f, 0xf9, 0x40, 0x20, 0x3f, 0x6d, 0x40, 0xd6,
      0x3f, 0x45, 0x3f, 0x3e, 0x40, 0x82, 0x40, 0x8d, 0x40, 0x57, 0x41, 0x90, 0x3f, 0xeb, 0x40, 0x74,      0x42, 0x4a, 0x40, 0x7f, 0x3f, 0xef, 0x40, 0xce, 0x41, 0xae, 0x41, 0xce, 0x41, 0x4d, 0x40, 0xc0,
      0x40, 0x65, 0x40, 0x78, 0x40, 0xe4, 0x41, 0x6f, 0x41, 0x37, 0x41, 0x64, 0x42, 0x04, 0x42, 0x5e,      0x41, 0x16, 0x41, 0x28, 0x41, 0x1b, 0x41, 0x72, 0x41, 0x18, 0x3f, 0x94, 0x3e, 0x96, 0x39, 0xa7,
      0x2e, 0x08, 0x2b, 0x56, 0x2f, 0xcd, 0x2e, 0xf4, 0x28, 0xd0, 0x29, 0x14, 0x30, 0x2d, 0x2f, 0xad,      0x2b, 0x95, 0x26, 0xf2, 0x2f, 0x04, 0x2d, 0x1b, 0x2e, 0x0f, 0x23, 0xb2, 0x27, 0x24, 0x35, 0x01,
      0x3a, 0x7f, 0x40, 0x75, 0x41, 0x8c, 0x40, 0xa3, 0x42, 0x4b, 0x42, 0x8d, 0x41, 0x66, 0x43, 0x1a,      0x41, 0xd3, 0x42, 0x7d, 0x41, 0xee, 0x43, 0x7c, 0x42, 0x16, 0x41, 0xc3, 0x41, 0x78, 0x41, 0xf9,
      0x41, 0x94, 0x41, 0xe1, 0x41, 0xd3, 0x42, 0xae, 0x42, 0xc3, 0x41, 0x5b, 0x41, 0xf2, 0x43, 0x53,      0x41, 0xb6, 0x41, 0xaf, 0x3f, 0x1c, 0x3d, 0xf2, 0x34, 0xdd, 0x1a, 0xa7, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xf6,
      0x12, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x8a, 0x3a, 0x4f,      0x3d, 0x1f, 0x40, 0x0e, 0x41, 0x15, 0x40, 0x42, 0x3f, 0x37, 0x40, 0x27, 0x40, 0x23, 0x3e, 0x6c,
      0x3e, 0x25, 0x3e, 0xb1, 0x3f, 0x24, 0x3f, 0x54, 0x3e, 0xd3, 0x40, 0x03, 0x3f, 0x1e, 0x3e, 0xae,      0x3f, 0xdc, 0x40, 0x09, 0x3f, 0xe2, 0x40, 0xa8, 0x40, 0x27, 0x3f, 0x30, 0x40, 0x2b, 0x40, 0x04,
      0x3e, 0xa6, 0x41, 0x07, 0x3f, 0x2f, 0x40, 0x5a, 0x40, 0x16, 0x3e, 0x9e, 0x3f, 0xd1, 0x3f, 0x8e,      0x40, 0x2f, 0x3f, 0x74, 0x40, 0x21, 0x40, 0x5a, 0x3f, 0x1b, 0x3f, 0x0f, 0x3f, 0xc7, 0x3e, 0x80,
      0x3f, 0x88, 0x40, 0xa5, 0x3f, 0x83, 0x3f, 0x49, 0x41, 0x2c, 0x40, 0xf8, 0x3f, 0x2a, 0x3e, 0xb8,      0x3f, 0x63, 0x3e, 0x9d, 0x40, 0xa6, 0x40, 0x41, 0x40, 0x4f, 0x40, 0x65, 0x41, 0x77, 0x41, 0x81,
      0x3e, 0x7d, 0x3c, 0x03, 0x3d, 0x2b, 0x3d, 0xf7, 0x3d, 0xc6, 0x3d, 0x85, 0x3e, 0x55, 0x3f, 0x0f,      0x3f, 0x73, 0x40, 0x62, 0x3f, 0xbf, 0x3f, 0xd3, 0x40, 0x96, 0x40, 0xd7, 0x40, 0xf3, 0x41, 0xf7,
      0x41, 0x4e, 0x41, 0x6e, 0x40, 0x8e, 0x3f, 0x75, 0x3c, 0xf7, 0x3a, 0x3e, 0x3a, 0x2d, 0x38, 0xb3,      0x39, 0xea, 0x3d, 0x1a, 0x3f, 0xe4, 0x3f, 0x55, 0x40, 0x99, 0x40, 0x24, 0x40, 0xe6, 0x3f, 0xed,
      0x3f, 0x80, 0x3e, 0x67, 0x3d, 0x59, 0x3d, 0x13, 0x3c, 0xab, 0x3c, 0x3c, 0x3c, 0xab, 0x3c, 0xbf,      0x3d, 0x87, 0x3d, 0xd0, 0x3b, 0xec, 0x39, 0x55, 0x39, 0x42, 0x38, 0x68, 0x37, 0x29, 0x3d, 0x56,
      0x41, 0x46, 0x40, 0xd1, 0x41, 0x58, 0x40, 0xd6, 0x40, 0xd6, 0x41, 0x64, 0x40, 0xb7, 0x40, 0xee,      0x40, 0x3f, 0x40, 0x7a, 0x3f, 0x9b, 0x3f, 0xf9, 0x40, 0x35, 0x3f, 0x9a, 0x3f, 0xe6, 0x3f, 0x7b,
      0x3f, 0x65, 0x40, 0x25, 0x3f, 0x09, 0x3f, 0x84, 0x3f, 0xe1, 0x3f, 0x0d, 0x3f, 0xc3, 0x3f, 0xe1,      0x3f, 0x2f, 0x3e, 0xa0, 0x3d, 0xcc, 0x3e, 0x52, 0x3d, 0xdb, 0x3d, 0x38, 0x3d, 0x13, 0x3d, 0x69,
      0x3d, 0x2a, 0x3d, 0x4e, 0x3d, 0x23, 0x3e, 0x64, 0x3d, 0xad, 0x3c, 0x4b, 0x3b, 0x95, 0x3d, 0x0f,      0x3d, 0x19, 0x3d, 0x81, 0x3c, 0x7e, 0x3b, 0xf3, 0x3b, 0x76, 0x3c, 0x00, 0x3b, 0xe9, 0x3b, 0x03,
      0x3a, 0xe4, 0x3b, 0xd8, 0x3b, 0x4f, 0x3b, 0x47, 0x39, 0x34, 0x3c, 0x9d, 0x3a, 0x34, 0x3b, 0x3c,      0x39, 0xe2, 0x3a, 0xc4, 0x39, 0x35, 0x3a, 0x5d, 0x38, 0x44, 0x3a, 0x04, 0x39, 0xa9, 0x38, 0xee,
      0x38, 0xe2, 0x38, 0x9d, 0x39, 0x90, 0x37, 0x5e, 0x38, 0x31, 0x36, 0x54, 0x37, 0x17, 0x38, 0x57,      0x36, 0xdc, 0x36, 0xf7, 0x36, 0x2e, 0x37, 0x21, 0x36, 0xbd, 0x35, 0x96, 0x35, 0xb3, 0x35, 0x82,
      0x35, 0x8b, 0x34, 0xd8, 0x34, 0xac, 0x34, 0x24, 0x34, 0x77, 0x37, 0x32, 0x37, 0xf0, 0x37, 0xaa,      0x35, 0xc8, 0x35, 0xe8, 0x37, 0x3f, 0x37, 0xde, 0x37, 0xbc, 0x37, 0x66, 0x36, 0x14, 0x33, 0x4e,
      0x31, 0xcb, 0x31, 0xe5, 0x32, 0x21, 0x33, 0x96, 0x32, 0xba, 0x31, 0xbe, 0x2f, 0x9a, 0x33, 0x88,      0x38, 0x2e, 0x38, 0x2d, 0x38, 0xc2, 0x38, 0xf5, 0x37, 0x01, 0x39, 0x8f, 0x36, 0xc2, 0x36, 0x34,
      0x35, 0x64, 0x30, 0xbc, 0x2d, 0xe6, 0x22, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf4,      0x11, 0x72, 0x13, 0x1e, 0x11, 0xba, 0x00, 0x00, 0x00, 0x00, 0x11, 0xdd, 0x00, 0x00, 0x00, 0x00,
      0x13, 0x50, 0x16, 0xe8, 0x16, 0xda, 0x17, 0x2d, 0x19, 0x5d, 0x1a, 0x85, 0x1b, 0x8d, 0x1b, 0xc7,      0x1b, 0x6a, 0x1c, 0x31, 0x1c, 0xa8, 0x1c, 0x9b, 0x1c, 0xc4, 0x1c, 0x61, 0x1d, 0x28, 0x1d, 0xb5,
      0x1e, 0x0d, 0x1d, 0x59, 0x1d, 0xaf, 0x1d, 0x6e, 0x1e, 0xc3, 0x1e, 0xb1, 0x1f, 0x0b, 0x1f, 0x4d,      0x1f, 0x4e, 0x20, 0x20, 0x20, 0xc2, 0x21, 0x92, 0x20, 0xfc, 0x1f, 0x86, 0x21, 0xd3, 0x22, 0x67,
      0x22, 0xc7, 0x22, 0x54, 0x23, 0x81, 0x22, 0xe6, 0x22, 0x4a, 0x24, 0x00, 0x24, 0x74, 0x25, 0x67,      0x26, 0x2b, 0x26, 0x5f, 0x27, 0x96, 0x27, 0x69, 0x27, 0xe7, 0x28, 0xc8, 0x29, 0xd6, 0x29, 0xfb,
      0x2a, 0xa3, 0x2b, 0x96, 0x2c, 0x70, 0x2d, 0x69, 0x2d, 0xf7, 0x29, 0x17, 0x27, 0xdc, 0x31, 0xdf,      0x32, 0x45, 0x33, 0x5e, 0x36, 0x66, 0x38, 0x47, 0x37, 0xf9, 0x39, 0x00, 0x37, 0xfa, 0x38, 0x81,
      0x38, 0x7d, 0x37, 0xc0, 0x39, 0x66, 0x38, 0x83, 0x38, 0x40, 0x38, 0x8c, 0x39, 0x08, 0x38, 0x3a,      0x37, 0xdd, 0x38, 0x27, 0x38, 0xbe, 0x37, 0xed, 0x37, 0xd7, 0x38, 0x6a, 0x37, 0x41, 0x37, 0x3d,
      0x38, 0x22, 0x38, 0x0e, 0x37, 0xe6, 0x37, 0x7f, 0x38, 0x2f, 0x37, 0xdc, 0x37, 0xb7, 0x37, 0xa2,      0x36, 0x95, 0x38, 0x98, 0x37, 0x19, 0x37, 0x4d, 0x37, 0xa5, 0x36, 0x85, 0x37, 0xb8, 0x38, 0x07,
      0x36, 0xed, 0x35, 0xef, 0x37, 0x51, 0x36, 0x79, 0x37, 0x3f, 0x37, 0x6d, 0x36, 0x81, 0x36, 0xdc,      0x36, 0x27, 0x37, 0x67, 0x37, 0x26, 0x37, 0x8c, 0x37, 0x94, 0x36, 0x3a, 0x37, 0x0d, 0x35, 0x79,
      0x36, 0xa5, 0x36, 0x00, 0x36, 0x01, 0x35, 0xf3, 0x35, 0x94, 0x35, 0xe2, 0x35, 0xc8, 0x36, 0x1e,      0x36, 0x23, 0x36, 0x53, 0x35, 0x41, 0x2e, 0xb0, 0x2e, 0xce, 0x30, 0x17, 0x2f, 0x9c, 0x2f, 0xa8,
      0x2f, 0xd7, 0x2e, 0x4e, 0x33, 0xdf, 0x34, 0x8b, 0x35, 0x14, 0x34, 0xd6, 0x33, 0xb0, 0x35, 0x0d,      0x35, 0x50, 0x33, 0xda, 0x33, 0x03, 0x35, 0x9d, 0x34, 0x63, 0x35, 0x16, 0x33, 0x09, 0x33, 0x7f,
      0x33, 0xa4, 0x33, 0xe5, 0x35, 0xeb, 0x34, 0x9f, 0x33, 0x0d, 0x33, 0xb2, 0x34, 0x25, 0x31, 0xee,      0x33, 0x3e, 0x33, 0x6c, 0x32, 0x58, 0x31, 0xef, 0x33, 0x1a, 0x33, 0x71, 0x32, 0x0f, 0x32, 0x30,
      0x32, 0x18, 0x32, 0x70, 0x31, 0x13, 0x31, 0xfa, 0x31, 0x19, 0x31, 0x10, 0x32, 0x60, 0x31, 0x0e,      0x31, 0x57, 0x30, 0x9a, 0x31, 0x6b, 0x31, 0xd2, 0x2f, 0x35, 0x2e, 0xa7, 0x2c, 0xfc, 0x29, 0x09,
      0x28, 0xe1, 0x2b, 0x35, 0x2e, 0x98, 0x2d, 0xb7, 0x2d, 0xc8, 0x2f, 0x09, 0x2e, 0xde, 0x2d, 0xeb,      0x2d, 0xff, 0x2e, 0x2d, 0x2d, 0x21, 0x2d, 0x4b, 0x2c, 0xe1, 0x2c, 0xd8, 0x2c, 0xe2, 0x2b, 0xb1,
      0x2c, 0xeb, 0x2c, 0x5f, 0x2d, 0x78, 0x2b, 0xd7, 0x2c, 0x71, 0x2b, 0x75, 0x2b, 0x76, 0x2b, 0x53,      0x2a, 0xe5, 0x2d, 0xdb, 0x2e, 0xe1, 0x2d, 0x7b, 0x2a, 0xa9, 0x29, 0xbe, 0x28, 0x0f, 0x2c, 0xa1,
      0x2c, 0xfa, 0x2c, 0x88, 0x2c, 0x49, 0x2c, 0x16, 0x2a, 0x56, 0x2c, 0x22, 0x2c, 0x76, 0x28, 0x61,      0x2a, 0xea, 0x2a, 0x80, 0x2b, 0x09, 0x2b, 0x25, 0x26, 0xab, 0x28, 0x7e, 0x2b, 0x88, 0x2a, 0x1d,
      0x29, 0xdf, 0x2d, 0x7f, 0x2c, 0xed, 0x2c, 0xb8, 0x2e, 0x1f, 0x2d, 0x98, 0x2d, 0x33, 0x2d, 0x47,      0x2d, 0xa5, 0x2d, 0x02, 0x2c, 0xb3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
      0x07, 0xb2, 0x01, 0x01, 0x00, 0x01, 0x38, 0x00, 0x0b, 0x3e, 0xe8, 0x00, 0x00, 0xc3, 0x02, 0x02,      0x02, 0x02, 0x00, 0x00, 0x0d, 0x25, 0x73, 0x53, 0x4e, 0x20, 0x4c, 0x4d, 0x44, 0x73, 0x63, 0x61,
      0x6e, 0x64, 0x61, 0x74, 0x61, 0x20, 0x00, 0x01, 0x00, 0x01, 0x01, 0x18, 0x9f, 0x5c, 0x00, 0x00,      0x05, 0xf7, 0x05, 0xfb, 0x06, 0xf6, 0x41, 0xaf, 0x06, 0xf6, 0x55, 0x83, 0x00, 0x00, 0x01, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x05, 0xdc, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x02, 0x44, 0x49,      0x53, 0x54, 0x31, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf9, 0x22, 0x30, 0x0d,
      0x05, 0x03, 0x2b, 0x01, 0xab, 0x01, 0xa7, 0x01, 0xa7, 0x01, 0xa8, 0x01, 0xa6, 0x01, 0xab, 0x01,      0xad, 0x01, 0xa9, 0x01, 0xa4, 0x01, 0x9a, 0x01, 0x9e, 0x01, 0xa4, 0x01, 0x97, 0x01, 0xa0, 0x01,
      0x9f, 0x01, 0x9e, 0x01, 0xaa, 0x01, 0xac, 0x01, 0xa9, 0x01, 0xa9, 0x01, 0xa8, 0x01, 0xae, 0x01,      0xa9, 0x01, 0xb2, 0x01, 0xad, 0x01, 0xa9, 0x01, 0xaf, 0x01, 0xb1, 0x01, 0xb4, 0x01, 0xb0, 0x01,
      0xb5, 0x01, 0xb4, 0x01, 0xad, 0x01, 0xb5, 0x01, 0xb5, 0x01, 0xb2, 0x01, 0xb2, 0x01, 0xae, 0x01,      0xb9, 0x01, 0xb5, 0x01, 0xb4, 0x01, 0xbd, 0x01, 0xbb, 0x01, 0xb4, 0x01, 0xb7, 0x01, 0xb2, 0x01,
      0xb4, 0x01, 0xb8, 0x01, 0xb6, 0x01, 0xb9, 0x01, 0xb2, 0x01, 0xb7, 0x01, 0xbf, 0x01, 0xb0, 0x01,      0xbc, 0x01, 0xbe, 0x01, 0xc2, 0x01, 0xc3, 0x01, 0xbc, 0x01, 0xbd, 0x01, 0xbe, 0x01, 0xbd, 0x01,
      0xbc, 0x01, 0xc0, 0x01, 0xbc, 0x01, 0xc7, 0x01, 0xc3, 0x01, 0xc1, 0x01, 0xce, 0x01, 0xd3, 0x01,      0xda, 0x01, 0xd9, 0x01, 0xcc, 0x01, 0xc5, 0x01, 0xc0, 0x01, 0xc8, 0x01, 0xcd, 0x01, 0xc9, 0x01,
      0xcd, 0x01, 0xce, 0x01, 0xe4, 0x01, 0xf5, 0x01, 0xf2, 0x02, 0x03, 0x02, 0x0f, 0x02, 0x13, 0x02,      0x07, 0x01, 0xf9, 0x01, 0xf1, 0x01, 0xf2, 0x01, 0xed, 0x01, 0xec, 0x01, 0xed, 0x01, 0xe5, 0x01,
      0xe3, 0x01, 0xdf, 0x01, 0xdb, 0x01, 0xdc, 0x01, 0xd4, 0x01, 0xd4, 0x01, 0xd7, 0x01, 0xcd, 0x01,      0xc4, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xbe, 0x01, 0xbc, 0x01, 0xbc, 0x01, 0xbb, 0x01, 0xbd, 0x01,
      0xbf, 0x01, 0xc2, 0x01, 0xc0, 0x01, 0xbd, 0x01, 0xbd, 0x01, 0xbf, 0x01, 0xbf, 0x01, 0xc0, 0x01,      0xc4, 0x01, 0xc5, 0x01, 0xcd, 0x01, 0xd9, 0x01, 0xde, 0x01, 0xd6, 0x01, 0xd4, 0x01, 0xc6, 0x01,
      0xcc, 0x01, 0xd0, 0x02, 0x01, 0x00, 0x02, 0x00, 0x02, 0x03, 0x03, 0x02, 0xf5, 0x02, 0xee, 0x02,      0xeb, 0x02, 0xe7, 0x02, 0xda, 0x02, 0xd2, 0x02, 0xca, 0x02, 0xc0, 0x02, 0xbb, 0x02, 0xb3, 0x02,
      0xaa, 0x02, 0xa5, 0x02, 0xa2, 0x02, 0x98, 0x02, 0x90, 0x02, 0x85, 0x02, 0x8f, 0x02, 0x8a, 0x02,      0x8f, 0x02, 0x91, 0x02, 0x93, 0x02, 0x97, 0x02, 0x9b, 0x02, 0x9b, 0x02, 0x9e, 0x02, 0x9d, 0x02,
      0xa0, 0x02, 0xa1, 0x02, 0xa4, 0x02, 0xa7, 0x02, 0xaa, 0x02, 0xb0, 0x02, 0xb3, 0x02, 0xb5, 0x02,      0xbb, 0x02, 0xba, 0x02, 0xbd, 0x02, 0xc0, 0x02, 0xc5, 0x02, 0xc8, 0x02, 0xc5, 0x02, 0xb2, 0x02,
      0xb1, 0x02, 0xc8, 0x02, 0xd5, 0x02, 0xda, 0x02, 0xdc, 0x02, 0xe7, 0x03, 0x39, 0x04, 0x3b, 0x04,      0x55, 0x04, 0x53, 0x04, 0x47, 0x04, 0x40, 0x04, 0x3e, 0x04, 0x31, 0x04, 0x2c, 0x04, 0x23, 0x04,
      0x25, 0x04, 0x16, 0x04, 0x18, 0x04, 0x0a, 0x04, 0x0a, 0x04, 0x04, 0x03, 0xfd, 0x03, 0xf3, 0x03,      0xf4, 0x03, 0xea, 0x03, 0xe5, 0x03, 0xdb, 0x03, 0xdb, 0x03, 0xd3, 0x03, 0xcc, 0x03, 0xcb, 0x03,
      0xc2, 0x03, 0xbf, 0x03, 0xb9, 0x03, 0xb3, 0x03, 0xb5, 0x03, 0xad, 0x03, 0xa7, 0x03, 0xa4, 0x03,      0x9e, 0x03, 0x9b, 0x03, 0x96, 0x03, 0x8c, 0x03, 0x90, 0x03, 0x89, 0x03, 0x85, 0x03, 0x83, 0x03,
      0x7c, 0x03, 0x79, 0x03, 0x78, 0x03, 0x72, 0x03, 0x6a, 0x03, 0x6a, 0x03, 0x69, 0x03, 0x63, 0x03,      0x5d, 0x03, 0x5a, 0x03, 0x59, 0x03, 0x56, 0x03, 0x4d, 0x03, 0x52, 0x03, 0x4e, 0x03, 0x49, 0x03,
      0x48, 0x03, 0x3f, 0x03, 0x41, 0x03, 0x3b, 0x03, 0x39, 0x03, 0x39, 0x03, 0x34, 0x03, 0x31, 0x03,      0x2b, 0x03, 0x28, 0x03, 0x25, 0x03, 0x1e, 0x03, 0x1f, 0x03, 0x1e, 0x03, 0x1f, 0x03, 0x18, 0x03,
      0x1f, 0x03, 0x16, 0x02, 0xb2, 0x01, 0xf2, 0x01, 0xea, 0x01, 0xe9, 0x01, 0xe4, 0x01, 0xe4, 0x01,      0xe1, 0x01, 0xe3, 0x01, 0xdf, 0x01, 0xd8, 0x01, 0xda, 0x01, 0xdf, 0x01, 0xde, 0x01, 0xe5, 0x02,
      0x48, 0x02, 0xe7, 0x02, 0xf8, 0x02, 0xfc, 0x02, 0xf5, 0x02, 0xf1, 0x02, 0xf3, 0x02, 0xf2, 0x02,      0xee, 0x02, 0xed, 0x02, 0xea, 0x02, 0xe4, 0x02, 0xe8, 0x02, 0xe7, 0x02, 0xe5, 0x02, 0xe4, 0x02,
      0xe1, 0x02, 0xe2, 0x02, 0xe3, 0x02, 0xe1, 0x02, 0xde, 0x02, 0xdd, 0x02, 0xe0, 0x02, 0xdd, 0x02,      0xd9, 0x02, 0xdb, 0x02, 0xdb, 0x02, 0xd9, 0x02, 0xda, 0x02, 0xd7, 0x02, 0xd3, 0x02, 0xa0, 0x00,
      0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00,
      0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00,      0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00,
      0x02, 0x00, 0x02, 0x01, 0x5c, 0x01, 0x57, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x09, 0x1c, 0x02,      0x9c, 0x02, 0xb5, 0x02, 0xc8, 0x02, 0xc0, 0x02, 0xc0, 0x02, 0xc0, 0x02, 0xbc, 0x02, 0xb9, 0x02,
      0xae, 0x02, 0xb4, 0x02, 0xae, 0x02, 0xb0, 0x02, 0xaa, 0x02, 0xab, 0x02, 0xad, 0x02, 0xaa, 0x02,      0xb0, 0x02, 0xa6, 0x02, 0xac, 0x02, 0xac, 0x02, 0xab, 0x02, 0xac, 0x02, 0xac, 0x02, 0xae, 0x02,
      0xad, 0x02, 0xae, 0x02, 0xb2, 0x02, 0xb3, 0x02, 0xb5, 0x02, 0xb1, 0x02, 0xaf, 0x02, 0xb8, 0x02,      0xb9, 0x02, 0xb4, 0x02, 0xb5, 0x02, 0xb7, 0x02, 0xb8, 0x02, 0xbd, 0x02, 0xbd, 0x02, 0xbf, 0x02,
      0xbf, 0x02, 0xc2, 0x02, 0xbd, 0x02, 0xc1, 0x02, 0xc2, 0x02, 0xc6, 0x02, 0xc6, 0x02, 0xca, 0x02,      0xcc, 0x02, 0xc0, 0x02, 0x76, 0x02, 0x07, 0x01, 0xe7, 0x01, 0xe2, 0x01, 0xe7, 0x01, 0xdf, 0x01,
      0xda, 0x01, 0xe3, 0x01, 0xef, 0x01, 0xed, 0x01, 0xf7, 0x01, 0xf2, 0x01, 0xf9, 0x01, 0xf1, 0x01,      0xeb, 0x01, 0xea, 0x01, 0xe6, 0x01, 0xea, 0x01, 0xe6, 0x01, 0xea, 0x01, 0xe8, 0x01, 0xe3, 0x01,
      0xe6, 0x01, 0xe4, 0x01, 0xde, 0x01, 0xd6, 0x01, 0xd8, 0x01, 0xd7, 0x01, 0xdd, 0x01, 0xd8, 0x01,      0xe4, 0x01, 0xe3, 0x01, 0xde, 0x01, 0xe1, 0x01, 0xe1, 0x01, 0xe5, 0x01, 0xe4, 0x01, 0xe6, 0x01,
      0xe9, 0x01, 0xe9, 0x01, 0xef, 0x01, 0xf1, 0x01, 0xf4, 0x01, 0xf1, 0x01, 0xf2, 0x01, 0xf7, 0x01,      0xfa, 0x01, 0xf8, 0x02, 0x07, 0x02, 0x0b, 0x02, 0x08, 0x02, 0x0e, 0x02, 0x18, 0x02, 0x27, 0x02,
      0xc1, 0x03, 0x76, 0x03, 0x90, 0x03, 0x92, 0x03, 0x97, 0x03, 0x9c, 0x03, 0xa1, 0x03, 0xa8, 0x03,      0xaa, 0x03, 0xaf, 0x03, 0xb2, 0x03, 0xb7, 0x03, 0xbb, 0x03, 0xc1, 0x03, 0xc6, 0x03, 0xce, 0x03,
      0xd8, 0x03, 0xda, 0x03, 0xdc, 0x03, 0xe2, 0x03, 0xee, 0x03, 0xf1, 0x03, 0xf3, 0x03, 0xf9, 0x03,      0xfa, 0x04, 0x04, 0x04, 0x0f, 0x04, 0x13, 0x04, 0x1b, 0x04, 0x23, 0x04, 0x26, 0x04, 0x32, 0x04,
      0x30, 0x04, 0x37, 0x04, 0x44, 0x04, 0x48, 0x04, 0x57, 0x04, 0x60, 0x04, 0x64, 0x04, 0x6a, 0x04,      0x77, 0x04, 0x7b, 0x04, 0x84, 0x04, 0x8b, 0x04, 0x94, 0x04, 0x97, 0x04, 0x9f, 0x04, 0xb4, 0x04,
      0xb7, 0x04, 0xc4, 0x04, 0xc4, 0x04, 0xc8, 0x04, 0xdd, 0x04, 0xe1, 0x04, 0xef, 0x04, 0xf9, 0x05,      0x04, 0x05, 0x14, 0x05, 0x19, 0x05, 0x25, 0x05, 0x2f, 0x05, 0x3c, 0x05, 0x50, 0x05, 0x55, 0x05,
      0x6d, 0x05, 0x75, 0x05, 0x85, 0x05, 0x8f, 0x05, 0x9c, 0x05, 0xad, 0x05, 0xbe, 0x05, 0xd2, 0x05,      0xe1, 0x05, 0xea, 0x05, 0xf5, 0x06, 0x08, 0x06, 0x1b, 0x06, 0x2a, 0x06, 0x48, 0x06, 0x53, 0x06,
      0x75, 0x06, 0x79, 0x06, 0x98, 0x06, 0xa7, 0x06, 0xbc, 0x06, 0xcd, 0x06, 0xe8, 0x06, 0xf2, 0x06,      0xf5, 0x07, 0x00, 0x06, 0xf9, 0x06, 0xf5, 0x06, 0xef, 0x06, 0xe1, 0x06, 0xe1, 0x06, 0xe5, 0x06,
      0xd6, 0x06, 0xbe, 0x06, 0x9f, 0x06, 0x9d, 0x06, 0x9f, 0x06, 0x95, 0x06, 0x92, 0x06, 0x8b, 0x06,      0x95, 0x06, 0xb5, 0x06, 0xbb, 0x06, 0xb8, 0x06, 0xb5, 0x06, 0xad, 0x06, 0xae, 0x06, 0xa7, 0x06,
      0xa3, 0x06, 0xaa, 0x06, 0xab, 0x06, 0x98, 0x06, 0x9e, 0x06, 0x9e, 0x00, 0x02, 0x00, 0x02, 0x00,      0x02, 0x01, 0x45, 0x01, 0x3f, 0x01, 0x39, 0x01, 0x40, 0x00, 0x02, 0x00, 0x02, 0x01, 0x40, 0x00,
      0x02, 0x00, 0x02, 0x01, 0x44, 0x01, 0x4a, 0x01, 0x52, 0x01, 0x49, 0x01, 0x48, 0x01, 0x44, 0x01,      0x43, 0x01, 0x3d, 0x01, 0x3c, 0x01, 0x38, 0x01, 0x32, 0x01, 0x2b, 0x01, 0x22, 0x01, 0x26, 0x01,
      0x1b, 0x01, 0x1f, 0x01, 0x13, 0x01, 0x0c, 0x01, 0x07, 0x01, 0x0a, 0x01, 0x04, 0x00, 0xfa, 0x00,      0xf5, 0x00, 0xed, 0x00, 0xe7, 0x00, 0xe1, 0x00, 0xcd, 0x00, 0xc5, 0x00, 0xc1, 0x00, 0xb7, 0x07,
      0x06, 0x00, 0xa4, 0x06, 0xf6, 0x06, 0xee, 0x06, 0xe6, 0x00, 0x81, 0x06, 0xdb, 0x06, 0xd8, 0x06,      0xd0, 0x06, 0xc7, 0x06, 0xc1, 0x06, 0xbb, 0x06, 0xb5, 0x06, 0xb1, 0x06, 0xae, 0x06, 0xa9, 0x06,
      0xa5, 0x06, 0xa1, 0x06, 0x9c, 0x06, 0x9a, 0x06, 0x97, 0x06, 0x91, 0x06, 0x8c, 0x06, 0x5d, 0x06,      0x06, 0x06, 0x44, 0x06, 0x48, 0x06, 0x51, 0x06, 0x7f, 0x06, 0x7d, 0x06, 0x7b, 0x06, 0x88, 0x06,
      0x82, 0x06, 0x87, 0x06, 0x88, 0x06, 0x89, 0x06, 0x8e, 0x06, 0x8d, 0x06, 0x93, 0x06, 0x8b, 0x06,      0x87, 0x06, 0x90, 0x06, 0x9a, 0x06, 0x99, 0x06, 0xa2, 0x06, 0x9b, 0x06, 0x9c, 0x06, 0xa6, 0x06,
      0xa5, 0x06, 0xaf, 0x06, 0xac, 0x06, 0xb6, 0x06, 0xb6, 0x06, 0xb8, 0x06, 0xc5, 0x06, 0xc4, 0x06,      0xc4, 0x06, 0xc4, 0x06, 0xcc, 0x06, 0xc8, 0x06, 0xcd, 0x06, 0xd3, 0x06, 0xd1, 0x06, 0xd9, 0x06,
      0xe3, 0x06, 0xe4, 0x06, 0xe6, 0x06, 0xe2, 0x06, 0xec, 0x06, 0xe9, 0x06, 0xf3, 0x06, 0xfe, 0x06,      0xfc, 0x07, 0x01, 0x07, 0x07, 0x07, 0x0b, 0x07, 0x13, 0x07, 0x15, 0x07, 0x1c, 0x07, 0x22, 0x07,
      0x28, 0x07, 0x24, 0x07, 0x2a, 0x07, 0x37, 0x07, 0x35, 0x07, 0x42, 0x07, 0x40, 0x07, 0x4b, 0x07,      0x4c, 0x07, 0x5e, 0x07, 0x5e, 0x07, 0x63, 0x07, 0x6e, 0x07, 0x54, 0x07, 0x45, 0x07, 0x3b, 0x07,
      0x49, 0x07, 0x4c, 0x07, 0x55, 0x07, 0x5e, 0x07, 0x8b, 0x07, 0x9f, 0x07, 0xae, 0x07, 0xb7, 0x07,      0xbb, 0x07, 0xc3, 0x07, 0xce, 0x07, 0xd2, 0x07, 0xe0, 0x07, 0xec, 0x07, 0xf0, 0x07, 0xf0, 0x07,
      0xfd, 0x08, 0x09, 0x08, 0x12, 0x08, 0x1d, 0x08, 0x21, 0x08, 0x29, 0x08, 0x2f, 0x08, 0x42, 0x08,      0x48, 0x08, 0x50, 0x08, 0x56, 0x08, 0x6e, 0x08, 0x69, 0x08, 0x75, 0x08, 0x8a, 0x08, 0x93, 0x08,
      0x97, 0x08, 0xac, 0x08, 0xaf, 0x08, 0xbb, 0x08, 0xc4, 0x08, 0xd3, 0x08, 0xe5, 0x08, 0xed, 0x08,      0xfb, 0x09, 0x07, 0x09, 0x12, 0x09, 0x21, 0x09, 0x34, 0x09, 0x46, 0x09, 0x40, 0x09, 0x36, 0x09,
      0x2e, 0x09, 0x36, 0x09, 0x49, 0x09, 0x78, 0x09, 0xab, 0x09, 0xc1, 0x09, 0xd7, 0x09, 0xe6, 0x09,      0xf5, 0x0a, 0x06, 0x0a, 0x1f, 0x0a, 0x30, 0x0a, 0x45, 0x0a, 0x57, 0x0a, 0x6d, 0x0a, 0x80, 0x0a,
      0x96, 0x0a, 0xab, 0x0a, 0xc4, 0x0a, 0xda, 0x0a, 0xf2, 0x0b, 0x0b, 0x0b, 0x22, 0x0b, 0x3b, 0x0b,      0x54, 0x0b, 0x72, 0x0b, 0x8e, 0x0b, 0xad, 0x0b, 0xbc, 0x0b, 0xb8, 0x0b, 0xb0, 0x0b, 0xb5, 0x05,
      0x6a, 0x05, 0xc1, 0x05, 0xf2, 0x06, 0x10, 0x06, 0x2f, 0x06, 0x55, 0x06, 0x73, 0x06, 0x96, 0x06,      0xb7, 0x06, 0xda, 0x0d, 0x80, 0x0d, 0xa3, 0x07, 0x4d, 0x0d, 0xf5, 0x0e, 0x21, 0x0e, 0x4a, 0x0e,
      0x59, 0x0e, 0x57, 0x0e, 0x5a, 0x0e, 0x61, 0x0e, 0x58, 0x0e, 0x4e, 0x0e, 0x42, 0x0e, 0x38, 0x0e,      0x2f, 0x0e, 0x25, 0x0e, 0x1e, 0x0e, 0x15, 0x0e, 0x0b, 0x52, 0x53, 0x53, 0x49, 0x31, 0x3f, 0x80,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf9, 0x22, 0x30, 0x0d, 0x05, 0x03, 0x2b, 0x40, 0x6f,      0x40, 0xcd, 0x40, 0xd5, 0x41, 0x80, 0x40, 0x14, 0x40, 0x34, 0x3e, 0x7b, 0x3e, 0x73, 0x3d, 0x7a,
      0x3c, 0xcd, 0x3d, 0x39, 0x3e, 0x5f, 0x3c, 0x98, 0x3d, 0x48, 0x3b, 0xea, 0x3a, 0x89, 0x3c, 0x23,      0x3c, 0xde, 0x3c, 0xdd, 0x3e, 0x45, 0x3d, 0xa8, 0x3e, 0x8b, 0x3d, 0x5d, 0x3e, 0x9e, 0x3d, 0x85,
      0x3c, 0xfc, 0x3e, 0x0f, 0x3d, 0xd1, 0x3e, 0x2e, 0x3d, 0x96, 0x3e, 0x19, 0x3d, 0xe1, 0x3d, 0x32,      0x3d, 0xa1, 0x3d, 0xf5, 0x3d, 0x9d, 0x3d, 0x62, 0x3c, 0x81, 0x3d, 0xce, 0x3c, 0x0d, 0x3b, 0x46,
      0x3c, 0xa3, 0x3c, 0x65, 0x3b, 0x22, 0x3b, 0x9c, 0x3b, 0x31, 0x3b, 0xcb, 0x3b, 0xed, 0x3b, 0xed,      0x3c, 0x33, 0x3b, 0x21, 0x3c, 0x20, 0x3c, 0xe4, 0x3a, 0xdf, 0x3c, 0xc6, 0x3d, 0x64, 0x3d, 0xa3,
      0x3d, 0xae, 0x3d, 0x27, 0x3c, 0x99, 0x3c, 0xd9, 0x3c, 0x37, 0x3b, 0xce, 0x3b, 0x4a, 0x3a, 0x4c,      0x3b, 0x94, 0x3a, 0x06, 0x39, 0x15, 0x39, 0x49, 0x37, 0xec, 0x37, 0x1c, 0x36, 0xdb, 0x35, 0x73,
      0x34, 0x4f, 0x34, 0xea, 0x36, 0x4a, 0x37, 0x4c, 0x35, 0x9e, 0x33, 0x45, 0x2c, 0xea, 0x21, 0x80,      0x16, 0xb6, 0x17, 0x80, 0x1a, 0x50, 0x1d, 0xe4, 0x1e, 0x7d, 0x1d, 0xbb, 0x1c, 0x60, 0x1b, 0x02,
      0x1a, 0x65, 0x1a, 0xec, 0x19, 0xd7, 0x1b, 0x8d, 0x1d, 0xaa, 0x1e, 0x3e, 0x1d, 0x49, 0x1d, 0x3f,      0x1e, 0x61, 0x1e, 0x2c, 0x1f, 0x21, 0x1d, 0x79, 0x1c, 0xb8, 0x1c, 0xdb, 0x1d, 0xea, 0x20, 0x93,
      0x27, 0x01, 0x25, 0xb7, 0x22, 0xe9, 0x1f, 0x4a, 0x1d, 0xff, 0x1f, 0x6b, 0x21, 0xf8, 0x22, 0xcf,      0x21, 0xc9, 0x22, 0x21, 0x21, 0xc8, 0x21, 0xc1, 0x22, 0xc3, 0x20, 0x75, 0x1d, 0xf2, 0x1d, 0xc5,
      0x1f, 0x31, 0x1e, 0x93, 0x1d, 0x48, 0x17, 0xdf, 0x1d, 0xf7, 0x22, 0x33, 0x20, 0x9d, 0x15, 0xf5,      0x00, 0x00, 0x00, 0x00, 0x15, 0xb3, 0x17, 0xd1, 0x18, 0x2d, 0x17, 0x64, 0x19, 0x18, 0x18, 0xf6,
      0x1a, 0x64, 0x1b, 0x73, 0x1c, 0x6f, 0x1c, 0x45, 0x1c, 0xa4, 0x21, 0xf4, 0x27, 0xd5, 0x23, 0xea,      0x27, 0x4c, 0x28, 0xd2, 0x2f, 0x65, 0x33, 0x58, 0x30, 0x12, 0x2f, 0x53, 0x2f, 0xd6, 0x2f, 0x6b,
      0x2d, 0xd3, 0x2d, 0xb6, 0x2c, 0xf5, 0x2b, 0x5b, 0x25, 0xe0, 0x25, 0x71, 0x27, 0x1a, 0x27, 0x29,      0x26, 0x0a, 0x26, 0xc4, 0x27, 0x2b, 0x26, 0x11, 0x26, 0xd8, 0x28, 0x33, 0x25, 0x70, 0x25, 0xe7,
      0x26, 0x3c, 0x26, 0x24, 0x25, 0xa1, 0x23, 0x30, 0x21, 0x8a, 0x20, 0x6f, 0x23, 0xc3, 0x26, 0xbe,      0x26, 0x14, 0x22, 0xfe, 0x24, 0x29, 0x23, 0xb7, 0x32, 0x1f, 0x3a, 0x42, 0x3c, 0xff, 0x3b, 0xe8,
      0x3c, 0x64, 0x3d, 0x43, 0x3c, 0x8d, 0x3c, 0xa2, 0x3c, 0xe3, 0x3e, 0x1e, 0x3c, 0x9e, 0x3e, 0x02,      0x3d, 0x42, 0x3e, 0x9a, 0x3e, 0x09, 0x3d, 0xd7, 0x3d, 0x1b, 0x3e, 0x79, 0x3d, 0xe8, 0x3e, 0x5c,
      0x3d, 0x6d, 0x3e, 0x75, 0x3e, 0x31, 0x3d, 0xf5, 0x3e, 0x47, 0x3d, 0xfe, 0x3f, 0x42, 0x3e, 0xd5,      0x3e, 0x63, 0x40, 0x50, 0x3f, 0x06, 0x3e, 0xe3, 0x3f, 0x20, 0x3f, 0xab, 0x3f, 0xae, 0x3f, 0xfa,
      0x3f, 0x31, 0x40, 0x91, 0x3f, 0x26, 0x3f, 0xa2, 0x3f, 0xf5, 0x3f, 0x5b, 0x3f, 0xb0, 0x40, 0x02,      0x40, 0x32, 0x3f, 0x22, 0x40, 0xaa, 0x41, 0x32, 0x40, 0x6d, 0x3f, 0xcc, 0x40, 0x98, 0x40, 0x23,
      0x3f, 0xba, 0x3f, 0xb9, 0x41, 0x23, 0x41, 0xfe, 0x41, 0x68, 0x42, 0x4d, 0x3f, 0xd4, 0x40, 0x59,      0x40, 0x9c, 0x41, 0x33, 0x41, 0x2e, 0x41, 0x79, 0x40, 0xdd, 0x40, 0xa7, 0x41, 0xc4, 0x40, 0x5b,
      0x40, 0x44, 0x40, 0xa0, 0x40, 0xbd, 0x42, 0x4c, 0x3f, 0xcb, 0x40, 0x47, 0x3a, 0xe9, 0x2d, 0xa7,      0x2b, 0x39, 0x30, 0x09, 0x2f, 0x98, 0x2b, 0x4b, 0x29, 0x2b, 0x30, 0x21, 0x2f, 0xce, 0x2a, 0x8d,
      0x26, 0x21, 0x2d, 0x52, 0x2d, 0xe5, 0x2d, 0x32, 0x22, 0xa0, 0x27, 0xc0, 0x35, 0x8e, 0x3b, 0xe2,      0x41, 0x51, 0x42, 0x0a, 0x41, 0x52, 0x42, 0x1c, 0x42, 0xba, 0x41, 0xfb, 0x42, 0xce, 0x42, 0x10,
      0x41, 0x69, 0x42, 0x36, 0x42, 0xd5, 0x41, 0xbe, 0x42, 0x11, 0x41, 0xc2, 0x42, 0x67, 0x42, 0xf8,      0x42, 0x5e, 0x42, 0x23, 0x42, 0x74, 0x42, 0xeb, 0x41, 0xf2, 0x41, 0xf8, 0x42, 0xc2, 0x42, 0xa2,
      0x40, 0xcb, 0x3e, 0x71, 0x3c, 0x8c, 0x35, 0x4a, 0x19, 0xed, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x66,      0x10, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x0b, 0x2b, 0x14, 0x38, 0x44, 0x3d, 0x8b,
      0x3f, 0x17, 0x40, 0xef, 0x41, 0x90, 0x41, 0x3d, 0x3f, 0x6f, 0x3d, 0x8d, 0x3e, 0x69, 0x3d, 0xe5,      0x3f, 0x33, 0x3e, 0x4d, 0x3f, 0x0f, 0x3f, 0x76, 0x3e, 0x7d, 0x40, 0xce, 0x3e, 0x98, 0x3f, 0x62,
      0x3f, 0x17, 0x3f, 0xbe, 0x3f, 0xff, 0x3f, 0x52, 0x3f, 0xb5, 0x3f, 0x2d, 0x40, 0x43, 0x3f, 0xf3,      0x40, 0xf3, 0x40, 0x6d, 0x3f, 0xa8, 0x3e, 0x3d, 0x41, 0x0a, 0x40, 0x7a, 0x3f, 0x2a, 0x3f, 0x19,
      0x3f, 0xea, 0x3e, 0xda, 0x3f, 0x7d, 0x3e, 0xcb, 0x3f, 0x4a, 0x3f, 0x37, 0x3f, 0xce, 0x3e, 0x55,      0x3f, 0xfb, 0x40, 0x1b, 0x40, 0x25, 0x3f, 0xa4, 0x3f, 0xec, 0x3e, 0xda, 0x3e, 0x3e, 0x3d, 0xd9,
      0x3e, 0x16, 0x41, 0x28, 0x3f, 0xc6, 0x41, 0x55, 0x41, 0x1a, 0x40, 0xbb, 0x41, 0xb8, 0x40, 0xc6,      0x3d, 0xd1, 0x3d, 0x98, 0x3d, 0x56, 0x3f, 0x18, 0x3e, 0x81, 0x3e, 0x2f, 0x3e, 0xaa, 0x3e, 0x78,
      0x40, 0x3a, 0x3f, 0x6e, 0x40, 0x25, 0x41, 0x6e, 0x40, 0xf8, 0x41, 0x6c, 0x40, 0x57, 0x40, 0x9e,      0x40, 0xa3, 0x41, 0xf8, 0x40, 0x60, 0x3d, 0x5c, 0x3a, 0x26, 0x3b, 0x29, 0x3a, 0x37, 0x39, 0xa7,
      0x3d, 0x09, 0x3f, 0x2c, 0x41, 0xb6, 0x40, 0x42, 0x40, 0x82, 0x41, 0x10, 0x3f, 0xea, 0x40, 0x7d,      0x3f, 0x7e, 0x3e, 0xfd, 0x3c, 0x67, 0x3b, 0xcc, 0x3c, 0x44, 0x3c, 0x76, 0x3b, 0xcd, 0x3d, 0x66,
      0x3d, 0xb7, 0x3b, 0x08, 0x39, 0x74, 0x39, 0x63, 0x38, 0x11, 0x37, 0xaf, 0x3d, 0x60, 0x40, 0x68,      0x41, 0x8b, 0x41, 0x02, 0x41, 0x00, 0x41, 0x40, 0x40, 0xb4, 0x40, 0x74, 0x40, 0x5b, 0x3f, 0xb6,
      0x40, 0x91, 0x40, 0x96, 0x3f, 0xcf, 0x3f, 0xdf, 0x40, 0x18, 0x41, 0x55, 0x3f, 0xda, 0x3e, 0xca,      0x3f, 0xa7, 0x3f, 0xf6, 0x3f, 0x67, 0x3e, 0x53, 0x3e, 0x7a, 0x3d, 0xae, 0x3d, 0xd9, 0x3e, 0xdb,
      0x3f, 0x8d, 0x3e, 0xbc, 0x3e, 0x81, 0x3d, 0xca, 0x3f, 0x4e, 0x3d, 0x37, 0x3c, 0x9e, 0x3d, 0x9d,      0x3c, 0xbc, 0x3e, 0x1f, 0x3d, 0x6a, 0x3d, 0x31, 0x3c, 0xcf, 0x3d, 0x95, 0x3c, 0xc5, 0x3c, 0xd1,
      0x3d, 0x20, 0x3c, 0x8e, 0x3b, 0x73, 0x3a, 0xe8, 0x3c, 0x81, 0x3b, 0x99, 0x3c, 0x05, 0x3a, 0x9b,      0x39, 0xd6, 0x3b, 0x1e, 0x39, 0xf2, 0x3a, 0x18, 0x39, 0xf7, 0x39, 0xf3, 0x3a, 0x5d, 0x39, 0xb5,
      0x39, 0x73, 0x39, 0x38, 0x38, 0xa8, 0x39, 0xa3, 0x38, 0x7c, 0x39, 0x7f, 0x39, 0x0c, 0x39, 0x01,      0x38, 0x91, 0x37, 0xd8, 0x38, 0x12, 0x38, 0x1a, 0x38, 0x21, 0x38, 0x3a, 0x36, 0xfa, 0x35, 0x4a,
      0x36, 0x4f, 0x36, 0x77, 0x36, 0x28, 0x37, 0x60, 0x35, 0xa0, 0x37, 0x8c, 0x35, 0x6b, 0x36, 0x54,      0x35, 0x6b, 0x34, 0xc6, 0x33, 0xff, 0x34, 0x78, 0x35, 0xf8, 0x36, 0x91, 0x38, 0x32, 0x37, 0xc4,
      0x37, 0xc7, 0x38, 0x4d, 0x36, 0x81, 0x36, 0xf9, 0x38, 0x88, 0x36, 0xa5, 0x34, 0x9d, 0x32, 0x4d,      0x33, 0x1a, 0x33, 0xd7, 0x33, 0x27, 0x33, 0x19, 0x31, 0xfb, 0x30, 0x1e, 0x34, 0x07, 0x38, 0x90,
      0x38, 0xa0, 0x38, 0x6c, 0x37, 0xda, 0x38, 0x47, 0x37, 0xd8, 0x36, 0xdf, 0x36, 0xae, 0x35, 0x14,      0x31, 0x0c, 0x2c, 0x64, 0x21, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xeb, 0x11, 0xec,
      0x12, 0xa1, 0x12, 0xd6, 0x00, 0x00, 0x00, 0x00, 0x11, 0x65, 0x00, 0x00, 0x00, 0x00, 0x13, 0xf7,      0x15, 0x93, 0x18, 0x4f, 0x19, 0x24, 0x1a, 0x4b, 0x1b, 0xda, 0x1c, 0x40, 0x1b, 0x6e, 0x1a, 0x5f,
      0x1b, 0xfc, 0x1b, 0x51, 0x1b, 0x75, 0x1c, 0x14, 0x1d, 0x87, 0x1d, 0xd5, 0x1d, 0x74, 0x1d, 0xcc,      0x1c, 0xee, 0x1d, 0xe0, 0x1e, 0x1b, 0x1f, 0x76, 0x20, 0xe9, 0x1e, 0x0e, 0x20, 0x5f, 0x1e, 0xe9,
      0x1f, 0xb3, 0x20, 0x41, 0x1f, 0xf1, 0x21, 0x0f, 0x21, 0x2f, 0x21, 0x83, 0x22, 0x05, 0x22, 0x3c,      0x21, 0xad, 0x23, 0x48, 0x23, 0x52, 0x24, 0x3c, 0x24, 0xd7, 0x25, 0x31, 0x24, 0xd5, 0x25, 0x9b,
      0x27, 0x3b, 0x27, 0xff, 0x27, 0x19, 0x26, 0x64, 0x28, 0x45, 0x28, 0x92, 0x29, 0x63, 0x2b, 0x71,      0x2a, 0x6d, 0x2c, 0xa4, 0x2d, 0x97, 0x2e, 0x34, 0x28, 0x80, 0x26, 0xc5, 0x31, 0xeb, 0x33, 0x00,
      0x32, 0x9b, 0x37, 0xa7, 0x38, 0x17, 0x37, 0xd6, 0x39, 0x3b, 0x37, 0xf2, 0x39, 0x0a, 0x38, 0xb9,      0x38, 0x51, 0x39, 0x32, 0x38, 0xc3, 0x39, 0x4d, 0x37, 0xab, 0x36, 0xc1, 0x37, 0x63, 0x38, 0x94,
      0x37, 0xf8, 0x39, 0x14, 0x37, 0x7f, 0x37, 0x75, 0x38, 0x26, 0x37, 0x58, 0x38, 0xbc, 0x38, 0x19,      0x38, 0xb8, 0x37, 0xcd, 0x38, 0x13, 0x39, 0x22, 0x38, 0x8c, 0x38, 0x45, 0x37, 0xc8, 0x38, 0x79,
      0x37, 0x8c, 0x37, 0xd3, 0x37, 0xf6, 0x37, 0x7e, 0x37, 0xc4, 0x38, 0x93, 0x38, 0x3b, 0x38, 0x13,      0x36, 0xf7, 0x37, 0x7d, 0x36, 0x93, 0x37, 0x55, 0x37, 0x9c, 0x37, 0x67, 0x37, 0x37, 0x36, 0xf7,
      0x37, 0x6d, 0x37, 0x54, 0x36, 0xb7, 0x37, 0x57, 0x36, 0xd5, 0x37, 0x28, 0x36, 0x30, 0x35, 0x7b,      0x36, 0xef, 0x35, 0xd3, 0x36, 0xf7, 0x35, 0xbf, 0x36, 0x10, 0x35, 0x49, 0x36, 0xb7, 0x35, 0x75,
      0x36, 0x6f, 0x36, 0x21, 0x2e, 0xa6, 0x2f, 0x0a, 0x2f, 0x7a, 0x32, 0x39, 0x2f, 0x64, 0x2f, 0xbb,      0x2f, 0xbd, 0x31, 0xe1, 0x34, 0x1c, 0x34, 0x23, 0x34, 0xb9, 0x34, 0x9b, 0x34, 0x41, 0x34, 0xe8,
      0x34, 0x1f, 0x35, 0x03, 0x35, 0x49, 0x34, 0xa7, 0x33, 0x34, 0x33, 0xe1, 0x34, 0x41, 0x34, 0x02,      0x34, 0x3a, 0x33, 0x5c, 0x32, 0xf0, 0x32, 0x39, 0x33, 0xdb, 0x33, 0x52, 0x32, 0x92, 0x31, 0xfa,
      0x33, 0x7d, 0x31, 0x60, 0x31, 0xd3, 0x33, 0x17, 0x33, 0x11, 0x32, 0x17, 0x33, 0x43, 0x31, 0xb0,      0x31, 0x69, 0x30, 0xce, 0x31, 0xf0, 0x32, 0x25, 0x31, 0x97, 0x32, 0x10, 0x31, 0xc7, 0x2f, 0xdb,
      0x31, 0x4e, 0x32, 0x53, 0x33, 0x44, 0x30, 0x57, 0x2e, 0x2e, 0x2d, 0xa3, 0x29, 0x8d, 0x29, 0x3f,      0x2a, 0x4c, 0x2e, 0x7b, 0x2e, 0x14, 0x2f, 0x03, 0x2e, 0x75, 0x2e, 0x18, 0x2d, 0xb0, 0x2c, 0xf3,
      0x2e, 0x0a, 0x2d, 0xdd, 0x2d, 0x3f, 0x2e, 0xca, 0x2d, 0x6b, 0x2d, 0x7f, 0x2d, 0x48, 0x2c, 0x2a,      0x2c, 0xd9, 0x2c, 0x6e, 0x2c, 0xf1, 0x2c, 0xbb, 0x2b, 0x68, 0x2b, 0x4c, 0x2b, 0x59, 0x2a, 0x56,
      0x2c, 0x93, 0x2f, 0x07, 0x2c, 0xdc, 0x2a, 0xc7, 0x26, 0xd3, 0x28, 0x75, 0x2b, 0xfe, 0x2c, 0xe6,      0x2c, 0x92, 0x2c, 0xab, 0x2d, 0x95, 0x2c, 0x41, 0x2c, 0x76, 0x2b, 0x28, 0x2b, 0x4c, 0x27, 0xea,
      0x28, 0x3f, 0x2a, 0x50, 0x26, 0xcc, 0x27, 0x96, 0x29, 0x43, 0x2a, 0xa3, 0x29, 0x6f, 0x29, 0x0f,      0x2c, 0x4b, 0x2e, 0x7f, 0x2e, 0x16, 0x2c, 0x6c, 0x2c, 0x38, 0x2c, 0x5c, 0x2b, 0xb4, 0x2e, 0x0c,
      0x2c, 0x7a, 0x2d, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0xb2,      0x01, 0x01, 0x00, 0x01, 0x38, 0x00, 0x0c, 0x44, 0xa0, 0x00, 0x00

  };
#else
  std::vector<uint8_t> scan_data_payload_i;
  m_nh->declare_parameter<std::vector<uint8_t>>("scan_data_payload", scan_data_payload_i);
  m_nh->get_parameter("scan_data_payload", scan_data_payload_i);
  std::vector<uint8_t> scan_data_payload;
  scan_data_payload.reserve(scan_data_payload_i.size());
  for(int n = 0; n < scan_data_payload_i.size(); n++)
    scan_data_payload.push_back((uint8_t)(scan_data_payload_i[n] & 0xFF));
#endif

  // Create listening socket and wait for connection from a client
  boost::system::error_code error_code;
  boost::asio::io_service ioservice;
  boost::asio::ip::tcp::acceptor tcp_acceptor(ioservice, boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), m_ip_port));
  tcp_acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
  boost::asio::ip::tcp::socket tcp_client_socket(ioservice);
  RCLCPP_INFO_STREAM(m_nh->get_logger(), "sick_scan::test::TestServerThread::run(" << m_scanner_name << "): waiting for tcp connection on port " << m_ip_port);
  tcp_acceptor.listen();
  tcp_acceptor.accept(tcp_client_socket, error_code);
  if(tcp_client_socket.is_open())
    RCLCPP_INFO_STREAM(m_nh->get_logger(), "sick_scan::test::TestServerThread::run(" << m_scanner_name << "): tcp connection established");

  // Create device specific message handler
  sick_scan::test::TestServerLidarMsg* msg_handler = 0;
  if(m_scanner_name == "sick_ldmrs")
    msg_handler = new sick_scan::test::TestServerLDMRSMsg(m_nh, send_scan_data_rate, scan_data_payload);
  else
    msg_handler = new sick_scan::test::TestServerColaMsg(m_nh, send_scan_data_rate, scan_data_payload);
  assert(msg_handler);

  // Run event loop, receive messages, create and send responses and scan data
  std::vector<uint8_t> message_received;
  std::vector<uint8_t> message_response;
  std::vector<uint8_t> scandata_message;
  message_received.reserve(64 * 1024);
  message_response.reserve(64 * 1024);
  bool message_is_binary = false;
  while(rclcpp::ok() && m_run_server_thread && tcp_client_socket.is_open())
  {
    // RCLCPP_DEBUG_STREAM(m_nh->get_logger(), "sick_scan::test::TestServerThread::run(" << m_scanner_name << "): tcp connection established, running event loop...");
    // Receive message
    if(msg_handler->receiveMessage(tcp_client_socket, message_received, message_is_binary))
    {
      RCLCPP_INFO_STREAM(m_nh->get_logger(), "sick_scan::test::TestServerThread::run(" << m_scanner_name << "): received " << message_received.size() 
        << " byte " << (message_is_binary?"binary":"text") << " message \"" << binDumpVecToString(&message_received, !message_is_binary) << "\"");
      // Generate response
      if(msg_handler->createResponse(message_received, message_is_binary, message_response))
      {
        RCLCPP_INFO_STREAM(m_nh->get_logger(), "sick_scan::test::TestServerThread::run(" << m_scanner_name << "): sending " << message_response.size() 
          << " byte response \"" << binDumpVecToString(&message_response, !message_is_binary) << "\"");
        // Send response
        size_t bytes_written = boost::asio::write(tcp_client_socket, boost::asio::buffer(message_response.data(), message_response.size()), boost::asio::transfer_exactly(message_response.size()), error_code);
        if(error_code || bytes_written < message_response.size())
        {
          RCLCPP_ERROR_STREAM(m_nh->get_logger(), "## ERROR sick_scan::test::TestServerThread::run(" << m_scanner_name << "): failed to send " << message_response.size() 
            << " byte response \"" << binDumpVecToString(&message_received, !message_is_binary) << "\"");
        }
      }
    }
    else
    {
      // Generate scan data message
      if(msg_handler->createScandata(scandata_message))
      {
        // Send scan data
        size_t bytes_written = boost::asio::write(tcp_client_socket, boost::asio::buffer(scandata_message.data(), scandata_message.size()), boost::asio::transfer_exactly(scandata_message.size()), error_code);
        if(error_code || bytes_written < message_response.size())
        {
          RCLCPP_ERROR_STREAM(m_nh->get_logger(), "## ERROR sick_scan::test::TestServerThread::run(" << m_scanner_name << "): failed to send " << scandata_message.size() 
            << " byte scan data \"" << binDumpVecToString(&message_received) << "\"");
        }
      }
    }
    std::this_thread::sleep_for(std::chrono::milliseconds(1));
  }

  // Close tcp connection
  RCLCPP_INFO_STREAM(m_nh->get_logger(), "sick_scan::test::TestServerThread::run(" << m_scanner_name << "): closing tcp connection");
  ioservice.stop();
  if(tcp_acceptor.is_open())
  {
    tcp_acceptor.close();
  }
  if(tcp_client_socket.is_open())
  {
    tcp_client_socket.shutdown(boost::asio::ip::tcp::socket::shutdown_both);
    tcp_client_socket.close();
  }
  RCLCPP_INFO_STREAM(m_nh->get_logger(), "sick_scan::test::TestServerThread::run(" << m_scanner_name << "): exiting tcp communication thread");
  m_run_server_thread = false;
  return true;
}